/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

struct ArticleFinderJSController;

struct CATransform3D {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
};

struct CGColor;

struct CGContext;

struct CGGradient;

struct CGImage;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct NSDictionary {
    Class _field1;
};

struct OpaqueJSContext;

struct OpaqueJSValue;

struct OwnPtr<ArticleFinderJSController> {
    struct ArticleFinderJSController *_field1;
};

struct ReaderController {
    id _field1;
    struct SString _field2;
    _Bool _field3;
    _Bool _field4;
    struct OwnPtr<ArticleFinderJSController> _field5;
    id _field6;
    struct SString _field7;
    _Bool _field8;
    id _field9;
    id _field10;
    id _field11;
};

struct ReaderJSController {
    void **_field1;
    struct Vector<OpaqueJSValue *, 0> _field2;
    struct OpaqueJSValue *_field3;
    struct OpaqueJSContext *_field4;
    id _field5;
    struct ReaderController *_field6;
    struct OwnPtr<ArticleFinderJSController> _field7;
    int _field8;
    struct RetainPtr<NSDictionary> _field9;
};

struct RetainPtr<NSDictionary> {
    struct NSDictionary *_field1;
};

struct RetainPtr<const __CFString *> {
    struct __CFString *_field1;
};

struct SString {
    struct RetainPtr<const __CFString *> _field1;
};

struct Vector<OpaqueJSValue *, 0> {
    unsigned int _field1;
    struct VectorBuffer<OpaqueJSValue *, 0> _field2;
};

struct VectorBuffer<OpaqueJSValue *, 0> {
    struct OpaqueJSValue **_field1;
    unsigned int _field2;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSZone;

struct __CFDateFormatter;

struct __CFLocale;

struct __CFRunLoopObserver;

struct __CFString;

struct __CTFramesetter;

struct __GSEvent;

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    void *_field9;
    void *_field10;
    void *_field11;
    void *_field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sFILEX;

struct __sbuf {
    char *_field1;
    int _field2;
};

struct _opaque_pthread_cond_t {
    long __sig;
    char __opaque[24];
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

typedef struct {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    float _field5;
    int _field6;
} CDAnonymousStruct1;

typedef struct {
    int nodes;
    int bytes;
} CDAnonymousStruct2;

/*
 * File: MobileSafari
 * Arch: arm v7s (armv7s)
 */

@protocol AddBookmarkNavigationControllerDelegate
- (void)addBookmarkNavController:(id)fp8 didFinishWithResult:(BOOL)fp12;
@end

@protocol BackForwardTableViewControllerDelegate
- (void)backForwardTableViewController:(id)fp8 didSelectWebHistoryItem:(id)fp12;
@end

@protocol BackgroundDrawing
- (void)drawBackgroundInContext:(struct CGContext *)fp8;
@end

@protocol BookmarkInfoViewControllerDelegate
- (void)bookmarkInfoViewController:(id)fp8 didFinishWithResult:(BOOL)fp12;
@end

@protocol BookmarkTextEntryTableViewControllerDelegate
- (void)bookmarkTextEntryTableViewController:(id)fp8 dismissedWithText:(id)fp12;
@end

@protocol BookmarksNavigationControllerDelegate <BrowserPanelDelegate>
- (id)browserPanel;
- (void)goToHistoryURL:(id)fp8;
- (void)goToBookmark:(id)fp8;
@end

@protocol BookmarksPanelStateRestoring <NSObject>
- (id)collectionType;
- (void)restoreScrollPosition:(float)fp8;
- (float)currentScrollPosition;
- (BOOL)restoreStateWithDictionary:(id)fp8;
- (id)currentStateDictionary;
@end

@protocol BrowserPanel <NSObject>
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
@end

@protocol BrowserPanelDelegate <NSObject>
- (void)closeBrowserPanel:(id)fp8;
- (void)browserPanel:(id)fp8 didChangeState:(int)fp12;
- (void)didHideBrowserPanel:(id)fp8;
- (void)willHideBrowserPanel:(id)fp8;
- (void)didShowBrowserPanel:(id)fp8;
- (void)willShowBrowserPanel:(id)fp8;
@end

@protocol BrowserToolbarDelegate
- (void)presentForwardPopoverFromButtonBar;
- (void)presentBackPopoverFromButtonBar;
- (void)toggleFullscreenFromButtonBar;
- (void)toggleBookmarksFromButtonBar;
- (void)showTabsFromButtonBar;
- (void)showActionPanelFromButtonBar;
- (void)forwardFromButtonBar;
- (void)backFromButtonBar;
@end

@protocol CloudTabNavigationControllerDelegate
- (void)cloudTabNavigationController:(id)fp8 didSelectCloudTab:(id)fp12;
@end

@protocol FindOnPageToolbarDelegate
- (int)currentResultIndex;
- (BOOL)hasMatches;
- (void)updateSearchText:(id)fp8;
- (void)done;
- (void)next;
- (void)previous;
- (id)textForToolbarLabel;
- (id)textForCurrentResultLabel;
@end

@protocol FolderPickerViewControllerDelegate
- (void)folderPicker:(id)fp8 pickedFolder:(id)fp12;
@end

@protocol LSOpenResourceOperationDelegate <NSObject>
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>
@end

@protocol NSObject
- (id)description;
- (unsigned int)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)fp8;
- (BOOL)conformsToProtocol:(id)fp8;
- (BOOL)isMemberOfClass:(Class)fp8;
- (BOOL)isKindOfClass:(Class)fp8;
- (BOOL)isProxy;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12 withObject:(id)fp16;
- (id)performSelector:(SEL)fp8 withObject:(id)fp12;
- (id)performSelector:(SEL)fp8;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned int)hash;
- (BOOL)isEqual:(id)fp8;
@end

@protocol NSURLConnectionDelegate <NSObject>
@end

@protocol NSURLDownloadDelegate <NSObject>
@end

@protocol QLContentView <NSObject>
- (void)updateWithQuickLookDocument:(id)fp8;
- (void)showBanner;
- (void)hideBanner;
- (id)initWithFrame:(struct CGRect)fp8 quickLookBannerViewDelegate:(id)fp24;
@end

@protocol QuickLookBannerViewDelegate <NSObject>
- (void)openInOtherApplications:(id)fp8;
- (void)openInApplication:(id)fp8;
@end

@protocol ReaderActionDelegate <NSObject>
- (void)decreaseTextSize;
- (void)increaseTextSize;
@end

@protocol ReaderControllerDelegate <NSObject>
- (int)readerOperationMode;
- (BOOL)isShowingReadingListArchive;
@end

@protocol RecentlyClosedTabViewControllerDelegate
- (void)recentlyClosedTabViewController:(id)fp8 didSelectTabDocument:(id)fp12;
@end

@protocol RotatableBrowserPanel <BrowserPanel>
- (void)didRotateFromInterfaceOrientation:(int)fp8;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
@end

@protocol RotatablePopoverControllerDelegate <UIPopoverControllerDelegate>
@end

@protocol SKProductPageViewControllerDelegate <NSObject>
@end

@protocol StoreBannerDelegate
- (void)shouldPinStoreBanner:(BOOL)fp8;
- (void)dismissStoreBanner;
@end

@protocol TabBarDelegate
- (void)tabBar:(id)fp8 closeItem:(id)fp12;
- (void)tabBar:(id)fp8 activateItem:(id)fp12;
- (void)tabBar:(id)fp8 moveItem:(id)fp12 overItem:(id)fp16;
- (void)tabBarAddTab:(id)fp8;
- (void)tabBarShowMoreTabs:(id)fp8;
- (void)tabBarAddTabLongPress:(id)fp8;
- (BOOL)tabBar:(id)fp8 canCloseItem:(id)fp12;
- (BOOL)tabBar:(id)fp8 canMoveItem:(id)fp12;
- (BOOL)tabBarCanAddTab:(id)fp8;
@end

@protocol TabDocumentDelegate
- (void)setStoreBannerPinnedToTop:(BOOL)fp8 forTabDocument:(id)fp12;
- (void)removeStoreBannerFromTabDocument:(id)fp8 animated:(BOOL)fp12;
- (void)setShowingStoreBanner:(id)fp8 isShowing:(BOOL)fp12;
- (void)composeEmailWithMailToURL:(id)fp8 forTabDocument:(id)fp12;
- (void)hideAlertForTabDocument:(id)fp8;
- (void)showAlertForTabDocument:(id)fp8;
- (void)tabDocument:(id)fp8 didCancelAuthenticationChallenge:(id)fp12;
- (void)tabDocument:(id)fp8 didReceiveAuthenticationChallenge:(id)fp12 fromDataSource:(id)fp16;
- (void)tabDocumentStoppedLoadingResource:(id)fp8;
- (void)tabDocumentStartedLoadingResource:(id)fp8;
- (void)tabDocument:(id)fp8 progressChanged:(float)fp12;
- (void)tabDocumentDidUpdateBackForward:(id)fp8;
- (void)tabDocumentDidUpdateURL:(id)fp8;
- (void)tabDocumentDidUpdateTitle:(id)fp8;
- (void)tabDocumentProgressDidStall:(id)fp8;
- (void)tabDocument:(id)fp8 didFinishLoadingWithError:(BOOL)fp12;
- (void)tabDocumentDidStartLoading:(id)fp8;
@end

@protocol TabExposeDelegate <NSObject>
- (void)tabExposeView:(id)fp8 didHideWithActiveTabDocument:(id)fp12;
- (void)tabExposeViewDidShow:(id)fp8;
- (void)tabExposeViewWillHide:(id)fp8;
- (void)tabExposeView:(id)fp8 willShowAboveView:(id)fp12;
- (BOOL)tabExposeViewCanAddTab:(id)fp8;
- (void)tabExposeViewAddTab:(id)fp8;
- (void)tabExposeView:(id)fp8 activateTabDocument:(id)fp12;
- (void)tabExposeView:(id)fp8 closeTabDocument:(id)fp12;
- (id)activeTabDocument;
@end

@protocol TabOverflowListControllerDelegate
- (void)tabOverflowListController:(id)fp8 didSelectTabDocument:(id)fp12;
@end

@protocol UIActionSheetDelegate <NSObject>
@end

@protocol UIActivityItemsSource <NSObject>
- (id)activityViewController:(id)fp8 itemsForActivityType:(id)fp12;
- (id)activityViewControllerPlaceholderItems:(id)fp8;
@end

@protocol UIApplicationDelegate <NSObject>
@end

@protocol UIDocumentInteractionControllerDelegate <NSObject>
@end

@protocol UIDocumentInteractionControllerDelegatePrivate <UIDocumentInteractionControllerDelegate>
@end

@protocol UIGestureRecognizerDelegate <NSObject>
@end

@protocol UIKeyInput <UITextInputTraits>
- (void)deleteBackward;
- (void)insertText:(id)fp8;
- (BOOL)hasText;
@end

@protocol UINavigationBarDelegate <NSObject>
@end

@protocol UINavigationControllerDelegate <NSObject>
@end

@protocol UIPopoverControllerDelegate <NSObject>
@end

@protocol UIScrollViewDelegate <NSObject>
@end

@protocol UISearchBarDelegate <NSObject>
@end

@protocol UISplitViewControllerDelegate
@end

@protocol UITableViewDataSource <NSObject>
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>
@end

@protocol UITextFieldDelegate <NSObject>
@end

@protocol UITextInputTraits <NSObject>
@end

@protocol UIWebPDFViewHandlerDelegate
@end

@protocol UIWebViewDelegate <NSObject>
@end

@protocol URLCompletionListDelegate
- (void)URLCompletionList:(id)fp8 didFinishUpdatingForPrefix:(id)fp12;
@end

@protocol WebBookmarksClientDelegateProtocol <NSObject>
@end

@protocol WebClipDelegate
@end

@protocol WebClipViewControllerDelegate
- (void)webClipViewController:(id)fp8 didFinishWithResult:(BOOL)fp12;
@end

@protocol WebDocumentText <NSObject>
- (void)deselectAll;
- (void)selectAll;
- (id)selectedString;
- (id)string;
- (BOOL)supportsTextEncoding;
@end

@protocol WebUIBrowserLoadingControllerDelegate <NSObject>
@end

@interface ActionPanelActivityItemsSource : _AITFireProbe <UIActivityItemsSource>
{
    BrowserPrintPageRenderer *_printRenderer;
    UIPrintInfo *_printInfo;
    NSURL *_urlToShare;
}

- (id)activityViewController:(id)fp8 itemsForActivityType:(id)fp12;
- (id)activityViewControllerPlaceholderItems:(id)fp8;
- (id)_activityItemsIncludingURLAsString:(BOOL)fp8;
- (id)_customActivities;
- (void)dealloc;

@end

@interface ActionPanel : _AITFireProbe <BrowserPanel>
{
    BOOL _inCancel;
    BOOL _inCompletionHandler;
}

- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (BOOL)_shouldSendBrowserPanelNotification;
- (void)willHideOnSuspend;
- (BOOL)shouldResumePanel;
- (void)panelWillSuspend;
- (BOOL)shouldHideOnSuspend;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (void)_preparePrint:(id)fp8;
- (void)_prepareMail:(id)fp8;
- (void)_preparePostToSocialNetwork:(id)fp8;
- (void)_prepareActivity:(id)fp8;
- (void)_executeActivity;
- (void)_cancel;
- (void)cancelActionPanel;
- (void)_activityDidComplete:(id)fp8 withSuccess:(BOOL)fp12;
- (id)init;

@end

@interface AddBookmarkNavigationController : _AITFireProbe <BookmarkInfoViewControllerDelegate>
{
    BookmarkInfoViewController *_infoViewController;
    WebBookmarkCollection *_collection;
    NSObject<AddBookmarkNavigationControllerDelegate> *_bookmarkNavDelegate;
    BOOL _delegateNotifiedOfResult;
}

- (void)setBookmarkNavDelegate:(id)fp8;
- (id)bookmarkNavDelegate;
- (void)bookmarkInfoViewController:(id)fp8 didFinishWithResult:(BOOL)fp12;
- (void)viewDidDisappear:(BOOL)fp8;
- (void)_popFromKeyboardReturn;
- (void)willHideOnSuspend;
- (BOOL)shouldResumePanel;
- (void)panelWillSuspend;
- (BOOL)shouldShowBrowserPanel;
- (void)addBookmarkWithTitle:(id)fp8 address:(id)fp12;
- (void)dealloc;
- (id)initWithCollection:(id)fp8;

@end

@interface CompletionTableView : _AITFireProbe
{
    UITableViewHeaderFooterView *_findOnPageHeader;
    float _keyboardOverlap;
    BOOL _specialHeadersEnabled;
}

- (void)setBounds:(struct CGRect)fp8;
- (void)setFindOnPageHeaderTitle:(id)fp8;
- (void)setSpecialHeadersEnabled:(BOOL)fp8;
- (void)updateKeyboardOverlap:(float)fp8 animated:(BOOL)fp12;
- (void)_updateHeaderFrames;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8 style:(int)fp24;

@end

@interface CompletionTableViewController : _AITFireProbe
{
    id <UITableViewDelegate><UITableViewDataSource> _dataSourceAndDelegateForTableView;
    UIView *_targetView;
}

- (void)setTargetView:(id)fp8;
- (id)targetView;
- (void)setDataSourceAndDelegateForTableView:(id)fp8;
- (id)dataSourceAndDelegateForTableView;
- (id)tableView:(id)fp8 titleForHeaderInSection:(int)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)dealloc;

@end

@interface AddressView : _AITFireProbe <RotatablePopoverControllerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, URLCompletionListDelegate>
{
    UIImageView *_gradientImageView;
    UIImageView *_bottomShadowView;
    ReloadImageView *_reloadImageView;
    AddressTextField *_addressTextField;
    NSString *_URLString;
    ExtendedSearchField *_searchTextField;
    UIResponder *_responderForEditingWithoutFirstResponder;
    ProgressView *_progressView;
    UIView *_urlClipperView;
    EllipsedTextView *_ellipsedTextView;
    EllipsedTextFadeView *_ellipsedTextFadeView;
    UIView *_bookmarkBarClipperView;
    UIImageView *_dividerView;
    BookmarksBarView *_bookmarksBarView;
    TabBar *_tabBar;
    UILabel *_titleTextView;
    struct CGSize _titleTextSize;
    UIImageView *_lockView;
    NSString *_evOrganizationName;
    NSString *_pageTitle;
    UIView *_titleTextViewContainer;
    NSString *_titleAfterCoalescedUpdate;
    UINavigationButton *_cancelButton;
    FadeView *_fadeView;
    CompletionTableViewController *_completionTableViewController;
    CompletionTableView *_completionTable;
    ReaderButtonView *_readerButton;
    BOOL _showingReaderButton;
    BOOL _needsReaderButtonLayout;
    URLCompletionList *_URLCompletionList;
    unsigned int _urlCompletionBackgroundTaskIdentifier;
    SearchEngineInfo *_currentSearchEngine;
    NSString *_searchCountKey;
    unsigned int _isAnimating:1;
    unsigned int _isEditing:1;
    unsigned int _URLCompletionUpdatesAreDisabled:1;
    unsigned int _isShowingBookmarksBar:1;
    unsigned int _suppressTextFieldDidEndEditingResponse:1;
    SearchSuggestionManager *_suggestionManager;
    NSMutableArray *_searchCompletionsRecents;
    NSMutableArray *_searchCompletionsSuggestions;
    NSDate *_searchTextExpiryDate;
    NSString *_userEnteredSearch;
    UISnapshotView *_snapshotView;
    NSMutableDictionary *_searchCompletionsMergingDictionary;
    NSArray *_mergedSearchCompletions;
    NSString *_searchTextForFindOnPage;
    unsigned int _numberOfTextMatches;
    NSTimer *_findOnPageUpdateTimer;
    UIView *_blankSectionHeaderView;
    SEL _outstandingDidStopSelector;
    BOOL _progressStalled;
    BOOL _usesPrivateBrowsingStyle;
    float _addressFieldLeftInset;
}

+ (BOOL)shouldShowInactiveFieldWhileEditing;
+ (BOOL)alwaysShowBookmarksBar;
+ (void)setAlwaysShowBookmarksBar:(BOOL)fp8;
+ (BOOL)_showsTitle;
- (float)addressFieldLeftInset;
- (void)setAddressFieldLeftInset:(float)fp8;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (id)readerButton;
- (void)layoutReaderButton;
- (void)setupReaderButtonIfNeeded;
- (struct CGRect)_readerButtonForProgressViewFrame:(struct CGRect)fp8;
- (void)_setShowingReaderButton:(BOOL)fp8;
- (void)_layoutClipperViewAndEllipsedTextView;
- (void)_updateEllipsedTextViewFadeTruncate;
- (unsigned int)numberOfTextMatches;
- (id)searchTextForFindOnThisPage;
- (void)animateOutWithSnapshotDuration:(double)fp8 thumbnailEndFrame:(struct CGRect)fp16;
- (void)prepareSnapshotForAnimateOut;
- (void)animateInWithSnapshotDuration:(double)fp8 thumbnailStartFrame:(struct CGRect)fp16;
- (void)_animateInWithSnapshotDidEnd;
- (id)snapshotView;
- (void)scrollViewWillBeginDragging:(id)fp8;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (float)tableView:(id)fp8 heightForHeaderInSection:(int)fp12;
- (id)tableView:(id)fp8 viewForHeaderInSection:(int)fp12;
- (id)tableView:(id)fp8 titleForHeaderInSection:(int)fp12;
- (void)adjustCompletionTableForKeyboardChange:(id)fp8 animated:(BOOL)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (int)_sectionIndexForFindOnThisPage;
- (id)inputAccessoryView;
- (BOOL)_activeTabIsBlankDocument;
- (int)_sectionIndexForRecentSearches;
- (int)_sectionIndexForSearchSuggestions;
- (BOOL)keyboardInputShouldDelete:(id)fp8;
- (BOOL)keyboardInput:(id)fp8 shouldInsertText:(id)fp12 isMarkedText:(BOOL)fp16;
- (void)_clearAddressTextFieldWithKeyboardInput:(id)fp8;
- (void)_pushUndoActionName:(id)fp8;
- (void)textFieldClearButtonPressed:(id)fp8;
- (void)textFieldDidEndEditing:(id)fp8;
- (BOOL)textFieldShouldEndEditing:(id)fp8;
- (void)textFieldDidBeginEditing:(id)fp8;
- (BOOL)textFieldShouldBeginEditing:(id)fp8;
- (void)_whileEditingSwitchToTextField:(id)fp8;
- (void)didMoveToSuperview;
- (void)setIsAnimating:(BOOL)fp8;
- (BOOL)isAnimating;
- (void)willHideProgress;
- (void)willShowProgress;
- (void)setEVOrganizationName:(id)fp8;
- (id)lockView;
- (id)titleTextView;
- (id)evOrganizationName;
- (id)title;
- (void)setTitle:(id)fp8 forceUpdate:(BOOL)fp12;
- (void)updateTitleTextViewForCoalescedUpdate;
- (id)progressView;
- (id)ellipsedTextView;
- (id)reloadImageView;
- (void)setProgress:(float)fp8 forceUpdate:(BOOL)fp12;
- (void)setProgressStalled:(BOOL)fp8;
- (void)_updateReloadImageViewWithForcedUpdate:(BOOL)fp8;
- (void)searchWithSearchString:(id)fp8;
- (void)search;
- (void)setSearchString:(id)fp8;
- (void)completedEditingAddressWithText:(id)fp8;
- (void)goToURL;
- (BOOL)isEditing;
- (void)browserControllerWillEndEnteringURL;
- (void)cancel;
- (void)transitionAwayFromEditingTextField:(id)fp8;
- (void)focusAddressField;
- (void)_ellipsedTextViewWasClicked;
- (void)transitionToEditingTextField:(id)fp8;
- (struct CGRect)_editingFrame;
- (void)_prepareTitleForAnimatedAlignmentChange;
- (void)_didFinishAnimatingToSwitchToSearchField;
- (void)_didFinishAnimatingToSwitchToURLField;
- (void)_didFinishAnimatingToStopEditing;
- (void)willSuspend;
- (void)updateBookmarksBar;
- (void)cleanUpBookmarksBar;
- (void)hideBookmarksBar;
- (void)showBookmarksBar;
- (void)prepareToShowBookmarksBar;
- (void)_didFinishAnimatingToEditSearchField;
- (void)_didFinishAnimatingToEditURL;
- (id)_colorForBookmarksBarTitles;
- (void)_adjustClipperViewAndEllipsedTextViewForEditing:(BOOL)fp8 textField:(id)fp12;
- (void)_layoutEllipsedTextViewForProgressViewFrame:(struct CGRect)fp8;
- (BOOL)_shouldDoURLSlideAnimation;
- (float)_addressWidthIncludingScheme:(BOOL)fp8;
- (void)_createButtons;
- (void)_cancelMouseExit;
- (void)_cancelMouseEnter;
- (void)_cancelMouseUpOutside;
- (void)_cancelMouseDown;
- (void)_swapInTextEditingView:(BOOL)fp8 andGiveFocus:(BOOL)fp12;
- (void)_updateAddressTextFieldText;
- (void)_setAddressTextFieldText:(id)fp8;
- (void)_updateFieldBackgroundStylesForEditing:(BOOL)fp8 textField:(id)fp12 showInactiveFieldWhileEditing:(BOOL)fp16;
- (void)_createAddressTextFieldIfNecessary;
- (void)_updateSearchCompletions;
- (void)_delayedUpdateFindOnPage;
- (void)cancelFindOnPage;
- (void)doFindOnPage:(id)fp8 inWebView:(id)fp12;
- (unsigned int)findOnPageOptions;
- (BOOL)isFindOnPageSupported;
- (void)searchDidFinish:(id)fp8;
- (void)search:(id)fp8 hasPartialResults:(id)fp12;
- (void)searchLimitHit:(id)fp8;
- (void)searchWasCancelled:(id)fp8;
- (void)searchDidTimeOut:(id)fp8;
- (void)searchDidBegin:(id)fp8;
- (void)_setAnimationStateActivityIndicator:(BOOL)fp8;
- (void)_updateShowingSearchCompletions;
- (void)_setSearchCompletionsToRecentSearchesMatchingPrefix:(id)fp8;
- (void)_setSearchSuggestions:(id)fp8;
- (void)_updateMergedSearchCompletions;
- (int)_sectionIndexForMergedSuggestions;
- (void)_updateURLCompletions;
- (void)URLCompletionList:(id)fp8 didFinishUpdatingForPrefix:(id)fp12;
- (void)_endURLCompletionBackgroundTask;
- (void)_rescheduleEndOfURLCompletionBackgroundTask;
- (void)_startURLCompletionBackgroundTask;
- (void)clearURLCompletionList;
- (void)clearSearchTextField;
- (void)hideCompletionTableIfItIsBeingShown;
- (void)_hideCompletions;
- (void)popoverController:(id)fp8 willPresentAfterRotationToInterfaceOrientation:(int)fp12;
- (void)_showCompletions;
- (void)_reloadCompletionTableAndAdjustPopover;
- (BOOL)_completionTableIsVisible;
- (id)_titleForFindOnPageHeader;
- (id)_stringForFindOnPagePopoverHeader:(id)fp8;
- (struct CGRect)_presentationRectForCompletionPopover;
- (void)_adjustClipperViewAndEllipsedTextViewAfterAnimateInOrOut;
- (void)_readerButtonClicked;
- (void)_reloadImageViewClicked;
- (id)hitTest:(struct CGPoint)fp8 withEvent:(id)fp16;
- (void)dealloc;
- (void)setTabBar:(id)fp8;
- (id)initWithFrame:(struct CGRect)fp8;
- (void)_updateTabBarActiveTabBackgroundImage;
- (void)_cleanUpSuggestionManager;
- (void)_setTitleText:(id)fp8;
- (void)updateUIWithForcedUpdate:(BOOL)fp8;
- (void)_layoutAddressTextField;
- (void)_layoutAddressTextFieldForProgressViewBounds:(struct CGRect)fp8;
- (void)_updateURLClipperViewFrameForReloadButtonRegionWidth:(float)fp8;
- (struct CGRect)_addressFrameInProgressViewBounds:(struct CGRect)fp8;
- (id)_colorForEVOrganizationNameInTitle;
- (id)_colorForNormalPageTitle;
- (void)updateSearchEngine;
- (void)_initSearchEngineIfNeeded;
- (void)setSearchFieldString;
- (void)layoutSubviews;
- (void)setBounds:(struct CGRect)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)_updateTabBarBackgroundOffset;
- (void)_layoutEllipsedTextFadeViewForEditing:(BOOL)fp8 textField:(id)fp12 showInactiveFieldWhileEditing:(BOOL)fp16;
- (void)_layoutEllipsedTextFadeViewShowingAdjustment:(BOOL)fp8;
- (void)_layoutCancelButtonForEditing:(BOOL)fp8 beforeAnimation:(BOOL)fp12;
- (void)_layoutReloadButtonForProgressViewFrame:(struct CGRect)fp8 forEditing:(BOOL)fp24 textField:(id)fp28 showInactiveFieldWhileEditing:(BOOL)fp32;
- (void)_layoutTitleView;
- (void)_setTitleFrame:(struct CGRect)fp8;
- (void)_updateLockViewImage;
- (void)_updateLockViewPosition;
- (void)_layoutCompletionTable;
- (void)_setUpTargetViewForCompletionTable;
- (BOOL)_isReaderAvailable;
- (float)_readerButtonHorizontalTotalMargin;
- (float)_reloadButtonRegionWidthWhenEditingTextField:(id)fp8;
- (float)_reloadButtonRegionWidth;
- (float)_rightSideButtonsRegionWidth;
- (BOOL)_completionsAreSearches;
- (id)_textFieldForEditing;
- (struct CGRect)_frameForSearchFieldWithFocus:(BOOL)fp8;
- (struct CGRect)_frameForProgressViewEditedWithFocus:(BOOL)fp8;
- (struct CGRect)_frameForSearchFieldNormal;
- (struct CGRect)_frameForProgressViewNormal;
- (float)_fieldPaddingTop;
- (float)_unfocusedViewWidth;
- (float)_focusedViewWidth;
- (float)_focusedViewWidthFactor:(int)fp8;
- (struct CGRect)_fieldRect;
- (void)browserControllerDidEndRotating;
- (void)browserControllerDidStartRotating;
- (BOOL)_isShowingProgress;
- (float)progress;
- (id)tabBar;
- (float)editingHeight;
- (float)defaultHeight;
- (float)_heightWithoutBars;
- (void)suggestionManager:(id)fp8 connectionDidFinishLoading:(id)fp12;
- (void)suggestionManager:(id)fp8 connection:(id)fp12 didFailWithError:(id)fp16 forSearchString:(id)fp20;
- (void)suggestionManager:(id)fp8 connection:(id)fp12 didReceiveResponse:(id)fp16;
- (void)suggestionManager:(id)fp8 hasSuggestions:(id)fp12 forSearchString:(id)fp16;

@end

@interface FadeView : _AITFireProbe
{
    id _target;
    SEL _action;
}

- (void)setAction:(SEL)fp8;
- (SEL)action;
- (void)setTarget:(id)fp8;
- (id)target;
- (void)touchesEnded:(id)fp8 withEvent:(id)fp12;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface ReloadImageView : _AITFireProbe
{
    UIImage *_reloadImage;
    UIImage *_stopImage;
    BOOL _stopShown;
    BOOL _stopDrawn;
    id _delegate;
}

- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)setCoalescedDisplayIfNeeded;
- (void)setDelegate:(id)fp8;
- (struct CGSize)defaultSize;
- (void)setStopShown:(BOOL)fp8 forceUpdate:(BOOL)fp12;
- (void)updateImage;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface ReaderButtonView : _AITFireProbe
{
    struct CGSize _defaultSize;
    UIImage *_showReaderNormal;
    UIImage *_hideReaderNormal;
    UIImage *_hideReaderPressed;
    UIImage *_showReaderPressed;
}

- (void)dealloc;
- (struct CGSize)defaultSize;
- (void)setHideShowImage:(BOOL)fp8;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8;
- (float)_defaultWidthForTitle:(id)fp8;
- (id)_font;

@end

@interface AddressTextField : _AITFireProbe
{
    BOOL _isBecomingFirstResponder;
}

- (BOOL)isBecomingFirstResponder;
- (id)_findPleasingWordBoundaryFromPosition:(id)fp8;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (void)layoutSubviews;

@end

@interface EllipsedTextViewURLSchemeView : _AITFireProbe
{
    EllipsedTextView *_parentEllipsedTextView;
}

- (void)drawRect:(struct CGRect)fp8;
- (void)setParentEllipsedTextView:(id)fp8;

@end

@interface EllipsedTextFadeView : _AITFireProbe
{
    float _fadeAdjustment;
    UIView<BackgroundDrawing> *_backgroundView;
}

- (void)setBackgroundView:(id)fp8;
- (id)backgroundView;
- (void)setFadeAdjustment:(float)fp8;
- (float)fadeAdjustment;
- (struct CGSize)sizeThatFits:(struct CGSize)fp8;
- (void)drawRect:(struct CGRect)fp8;

@end

@interface EllipsedTextView : _AITFireProbe
{
    id _delegate;
    BOOL _truncatesURLScheme;
    UIColor *_textColor;
    EllipsedTextViewURLSchemeView *_schemeView;
    float _fadeAdjustment;
}

+ (float)placeholderWidth;
+ (id)placeholderColor;
+ (id)placeholderText;
+ (id)defaultAddressColor;
+ (float)offsetForSchemeInAddressString:(id)fp8;
+ (id)urlFont;
- (void)drawRect:(struct CGRect)fp8;
- (id)textColor;
- (void)setTextColor:(id)fp8;
- (void)setDelegate:(id)fp8;
- (id)schemeView;
- (BOOL)truncatesURLScheme;
- (void)setTruncatesURLScheme:(BOOL)fp8;
- (void)browserControllerDidEndRotating;
- (void)browserControllerDidStartRotating;
- (void)setFadeAdjustment:(float)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)setNeedsDisplay;
- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface ExtendedSearchField : _AITFireProbe
{
    BOOL _isBecomingFirstResponder;
    BOOL forceDrawingPlaceholder;
    struct CGRect _editRectOverride;
    UIImageView *_privateBrowsingBackgroundView;
}

- (BOOL)isBecomingFirstResponder;
- (struct CGRect)editingRectForBounds:(struct CGRect)fp8;
- (struct CGRect)textRectForBounds:(struct CGRect)fp8;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)layoutSubviews;
- (BOOL)drawingPlaceholderOnly;
- (void)setForceDrawingPlaceholder:(BOOL)fp8;
- (void)setFrame:(struct CGRect)fp8 forEditing:(BOOL)fp24;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface Application : _AITFireProbe <UIApplicationDelegate>
{
    BrowserController *_controller;
    BOOL _finishedLaunching;
    BOOL _isHidingBrowserPanelForSuspend;
    BOOL _isHandlingMemoryWarning;
    NSTimer *_memoryWarningTimer;
    double _memoryWarningSleepInterval;
    int _memoryWarningState;
    BOOL _isReadingDefaults;
    BOOL _shouldReadDefaultsOnResume;
    NSString *_defaultPNGName;
    PageLoadTestRunner *_purplePLT;
    PageLoadTestRunner *_commandLinePLT;
    NSString *_purpleTestName;
    BOOL _testIsRunning;
    BOOL _isRunningShowBookmarksTest;
    BOOL _startedBookmarksTest;
    BOOL _isRunningCanvasTest;
    BOOL _isRunningReaderTest;
    TestProcessor *_testProcessor;
    CayenneClientDebugger *_debugger;
    BOOL _alreadyDebugging;
}

- (void)debugWebView:(id)fp8;
- (BOOL)finishedLaunching;
- (BOOL)isHidingBrowserPanelForSuspend;
- (id)window;
- (void)finishedTest:(id)fp8 extraResults:(id)fp12;
- (void)applicationWillTerminate;
- (void)applicationDidFinishLaunching:(id)fp8;
- (void)_setHandlingURL:(BOOL)fp8 url:(id)fp12;
- (void)userDefaultsDidChange:(id)fp8;
- (void)applicationOpenURL:(id)fp8;
- (void)_saveNSURLCacheToDiskInBackground:(BOOL)fp8;
- (void)applicationDidEnterBackground:(id)fp8;
- (void)applicationWillEnterForeground:(id)fp8;
- (void)clearReaderViewsExceptMultiplePageReader:(BOOL)fp8;
- (void)applicationDidBecomeActive:(id)fp8;
- (void)applicationWillResignActive:(id)fp8;
- (void)applicationResume:(struct __GSEvent *)fp8;
- (BOOL)applicationSuspend:(struct __GSEvent *)fp8 settings:(id)fp12;
- (void)_applicationWillSuspend;
- (void)_resumeForEventsOnly:(BOOL)fp8;
- (void)_readDefaults;
- (BOOL)_suspendForEventsOnly:(BOOL)fp8;
- (id)nameOfDefaultImageToUpdateAtSuspension;
- (void)dealloc;
- (id)lastPageLoadTime;
- (id)lastPageVisualLayoutTime;
- (id)linksOnActivePage;
- (id)activeURL;
- (id)setNotifyPageLoadDidFinish:(id)fp8;
- (id)loadURLInNewWindow:(id)fp8;
- (id)loadURL:(id)fp8;
- (void)stopLoading;
- (void)scrollDocumentDown;
- (id)isAtEndOfPage;
- (id)isLoading;
- (void)_dumpMemoryStatistics:(BOOL)fp8;
- (void)reduceMemoryOnApplicationSuspendIfNeeded;
- (void)didReceiveMemoryWarning;
- (void)_handleMemoryWarningLevel;
- (void)_stopMemoryWarningTimer;
- (void)_startMemoryWarningTimer;
- (BOOL)_isStillUnderMemoryPressure;
- (void)_handleMemoryWarningBackground;
- (void)_handleMemoryWarningCriticalPriority;
- (void)_handleMemoryWarningHighPriority:(id)fp8;
- (void)_handleMemoryWarningMediumPriority:(id)fp8;
- (void)_hibernateOneDocumentFrom:(id)fp8;
- (void)_handleMemoryWarningLowPriority;
- (void)_incrementMemoryWarningState;
- (void)categorizeInMemoryImportantDocuments:(id)fp8 unimportantDocuments:(id)fp12;
- (void)initMemoryJetsamInfo;
- (void)setHandlingMemoryWarning:(BOOL)fp8;
- (BOOL)isHandlingMemoryWarning;
- (id)buildPageLoadTestRunner:(id)fp8 suiteName:(id)fp12 del:(id)fp16;
- (BOOL)didStartBookmarksTest;
- (BOOL)isRunningReaderTest;
- (BOOL)isRunningCanvasTest;
- (BOOL)isRunningShowBookmarksTest;
- (void)finishedBookmarksTest;
- (void)finishedCanvasTestwithURL:(id)fp8;
- (void)startBookmarksTest;
- (BOOL)prepareBookmarksTest;
- (BOOL)startCanvasTest:(id)fp8;
- (void)pageLoadTestRunnerFinishedTest:(id)fp8;
- (void)pageLoadTestRunnerStartedTest:(id)fp8;
- (BOOL)isCommandLinePLTRunning;
- (id)currrentTestName;
- (BOOL)isTestRunning;
- (void)finishedPurpleTest:(id)fp8;
- (void)startedPurpleTest;
- (BOOL)runTest:(id)fp8 options:(id)fp12;

@end

@interface BackForwardNavigationController : _AITFireProbe <BrowserPanel, BackForwardTableViewControllerDelegate>
{
    BackForwardTableViewController *_tableViewController;
}

- (BOOL)shouldShowButtonBar;
- (id)toolbarItems;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (id)rotatingFooterView;
- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)backForwardTableViewController:(id)fp8 didSelectWebHistoryItem:(id)fp12;
- (void)setReversesListOrder:(BOOL)fp8;
- (BOOL)reversesListOrder;
- (void)setBackForwardList:(id)fp8;
- (id)backForwardList;
- (void)done;
- (void)dealloc;
- (id)init;

@end

@interface BackForwardTableViewController : PopoverSizingTableViewController
{
    id <BackForwardTableViewControllerDelegate> _delegate;
    NSArray *_backForwardList;
    BOOL _reversesListOrder;
}

- (void)setReversesListOrder:(BOOL)fp8;
- (BOOL)reversesListOrder;
- (id)backForwardList;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)dealloc;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)indexForIndexPath:(id)fp8;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (void)setBackForwardList:(id)fp8;

@end

@interface BookmarkInfoViewController : _AITFireProbe <FolderPickerViewControllerDelegate, BookmarkTextEntryTableViewControllerDelegate, UITableViewDataSource, UITableViewDelegate>
{
    WebBookmarkCollection *_collection;
    WebBookmark *_bookmark;
    WebBookmark *_parentBookmark;
    BOOL _addingBookmark;
    UITableView *_table;
    BookmarkTextEntryTableViewCell *_titleCell;
    BookmarkTextEntryTableViewCell *_addressCell;
    UITableViewCell *_folderCell;
    int _editingField;
    BOOL _didSelectFolder;
    NSObject<BookmarkInfoViewControllerDelegate> *_delegate;
}

- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)viewWillLayoutSubviews;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)dealloc;
- (BOOL)textFieldShouldReturn:(id)fp8;
- (void)bookmarkTextEntryTableViewController:(id)fp8 dismissedWithText:(id)fp12;
- (void)folderPicker:(id)fp8 pickedFolder:(id)fp12;
- (void)_valuesChanged;
- (BOOL)isEditingField;
- (void)_showFolderPicker;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (void)_editField:(int)fp8;
- (BOOL)canSaveChanges;
- (void)saveChanges;
- (void)setParent:(id)fp8;
- (void)setBookmark:(id)fp8;
- (void)_updateCellValues;
- (void)_updateParentFolderCell;
- (BOOL)titleCellHasText;
- (id)bookmark;
- (void)_bookmarksDidReload;
- (void)didRotateFromInterfaceOrientation:(int)fp8;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (id)_titleCell;
- (void)layoutViews;
- (void)scrollViewDidEndScrollingAnimation:(id)fp8;
- (void)_adjustContentInsetForKeyboardNotification:(id)fp8;
- (BOOL)shouldShowButtonBar;
- (void)loadView;
- (void)_createCellsIfNeeded;
- (void)_addressDidEndEditing;
- (void)_titleDidEndEditing;
- (void)_popFromKeyboardReturn;
- (void)_cancel;
- (void)_save;
- (id)initWithBookmark:(id)fp8 inCollection:(id)fp12 addingBookmark:(BOOL)fp16;

@end

@interface BookmarksBarButton : _AITFireProbe
{
    BOOL _usesHighlightedStyle;
    BOOL _usesPrivateBrowsingStyle;
}

- (void)setSelected:(BOOL)fp8;
- (void)setHighlighted:(BOOL)fp8;
- (BOOL)_shouldShowHighlightedStyleImages;
- (BOOL)usesHighlightedStyle;
- (void)setUsesHighlightedStyle:(BOOL)fp8;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface BookmarksBarChevronButton : BookmarksBarButton
{
    UIImageView *_chevronImageView;
}

- (void)dealloc;
- (void)setUsesHighlightedStyle:(BOOL)fp8;
- (void)layoutSubviews;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface BookmarksBarLabel : _AITFireProbe
{
    UIImage *gradientImage;
    UIImage *highlightGradientImage;
    BOOL isHightlighted;
    NSString *text;
    UIFont *font;
    UIColor *textColor;
    UIColor *shadowColor;
    struct CGSize shadowOffset;
    BookmarksBarLabelGradientView *gradientView;
}

- (void)setShadowOffset:(struct CGSize)fp8;
- (struct CGSize)shadowOffset;
- (void)setShadowColor:(id)fp8;
- (id)shadowColor;
- (void)setTextColor:(id)fp8;
- (id)textColor;
- (void)setFont:(id)fp8;
- (id)font;
- (void)setText:(id)fp8;
- (id)text;
- (void)setHighlightGradientImage:(id)fp8;
- (id)highlightGradientImage;
- (void)setGradientImage:(id)fp8;
- (id)gradientImage;
- (void)drawRect:(struct CGRect)fp8;
- (void)setHighlighted:(BOOL)fp8;
- (BOOL)isHightlighted;
- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface BookmarksBarLabelGradientView : _AITFireProbe
{
    BookmarksBarLabel *parentLabel;
}

- (void)setParentLabel:(id)fp8;
- (id)parentLabel;
- (void)drawRect:(struct CGRect)fp8;

@end

@interface BookmarksBarLabelButton : BookmarksBarButton
{
    WebBookmark *_bookmark;
    BookmarksBarLabel *_gradientLabel;
    UIImageView *_folderArrowImageView;
}

+ (id)_highlightedPrivateBrowsingImage;
+ (id)_highlightedGradientImage;
+ (struct CGGradient *)_highlightedTextColorGradient;
+ (id)_privateBrowsingImage;
+ (id)_textColorImage;
+ (id)_newGradientImage:(struct CGGradient *)fp8;
+ (id)fontForBookmarksBarLabelButton;
+ (struct CGSize)sizeOfBookmarkFolderArrow;
- (void)dealloc;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (id)bookmark;
- (void)layoutSubviews;
- (void)setBookmark:(id)fp8;
- (void)setUsesHighlightedStyle:(BOOL)fp8;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface BookmarksBarView : _AITFireProbe <BookmarksNavigationControllerDelegate, RotatablePopoverControllerDelegate>
{
    NSMutableArray *_bookmarkBarLabels;
    unsigned int _bookmarkBarID;
    BookmarksBarChevronButton *_moreBookmarksButton;
    WebBookmark *_moreBookmarksParent;
    unsigned int _moreBookmarksOffset;
    UIButton *_buttonUsedToShowNavigationController;
    BOOL _isShowingNavigationController;
    BookmarksNavigationController *_bookmarksNavigationController;
    BOOL _usesPrivateBrowsingStyle;
}

- (BOOL)usesPrivateBrowsingStyle;
- (void)bookmarksNavigationControllerDidReload:(id)fp8;
- (void)bookmarksNavigationControllerReloadDidFail:(id)fp8;
- (id)containingBookmarkForNavigationController:(id)fp8;
- (void)goToHistoryURL:(id)fp8;
- (void)goToBookmark:(id)fp8;
- (void)closeBrowserPanel:(id)fp8;
- (void)browserPanel:(id)fp8 didChangeState:(int)fp12;
- (void)didHideBrowserPanel:(id)fp8;
- (void)willHideBrowserPanel:(id)fp8;
- (void)didShowBrowserPanel:(id)fp8;
- (void)willShowBrowserPanel:(id)fp8;
- (id)browserPanel;
- (void)dealloc;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8;
- (void)_receivedBookmarksChangedNotification:(id)fp8;
- (void)_reloadBookmarkLabels;
- (void)_createAllLabelButtons;
- (void)popoverControllerDidDismissPopover:(id)fp8;
- (void)popoverController:(id)fp8 willPresentAfterRotationToInterfaceOrientation:(int)fp12;
- (void)_dismissCurrentBookmarksPopover;
- (void)_buttonTapped:(id)fp8;
- (void)_touchDownInButton:(id)fp8;
- (void)_clearBookmarksNavigationController;
- (void)_setButtonUsedToShowNavigationController:(id)fp8;

@end

@interface BookmarksNavigationController : _AITFireProbe <BrowserPanel, UINavigationBarDelegate, UINavigationControllerDelegate, UIActionSheetDelegate>
{
    BookmarkInfoViewController *_bookmarkInfoViewController;
    WebBookmarkCollection *_bookmarkCollection;
    NSTimer *_bookmarkSyncTimer;
    BOOL _isVisible;
    BOOL _shouldSavePlaceInBookmarks;
    BOOL _restoringPlaceInBookmarks;
    id <BookmarksNavigationControllerDelegate> _bookmarksDelegate;
    int _panelState;
    UIActionSheet *_clearHistoryAlertSheet;
    BOOL _allowsEditing;
    UIBarButtonItem *_clearHistoryItem;
    UIBarButtonItem *_doneItem;
    UIBarButtonItem *_editItem;
    UIBarButtonItem *_emptySpaceItem;
    UIBarButtonItem *_newFolderItem;
    BOOL _showCollections;
    UISegmentedControl *_collectionSegmentedControl;
    UIBarButtonItem *_collectionBarItem;
    NSArray *_collectionToolbarItems;
    NSArray *_collectionsParentedInBookmarks;
    NSArray *_topLevelCollections;
    NSString *_currentCollection;
    NSMutableDictionary *_savedCollectionState;
}

- (void)setAllowsEditing:(BOOL)fp8;
- (BOOL)allowsEditing;
- (void)setBookmarksDelegate:(id)fp8;
- (id)bookmarksDelegate;
- (void)dealloc;
- (void)_clearBookmarkSyncTimer;
- (void)_bookmarkSyncTimerDidFire:(id)fp8;
- (BOOL)shouldHideOnSuspend;
- (BOOL)shouldResumePanel;
- (void)panelWillSuspend;
- (BOOL)shouldShowButtonBar;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (void)actionSheet:(id)fp8 clickedButtonAtIndex:(int)fp12;
- (void)navigationController:(id)fp8 willShowViewController:(id)fp12 animated:(BOOL)fp16;
- (void)_restoreCurrentCollectionState;
- (void)_restorePanelState;
- (void)_savePanelState;
- (void)_loadSavedPanelState;
- (void)setCurrentCollection:(id)fp8;
- (id)newRootViewControllerForCollection:(id)fp8;
- (void)_selectedCollectionChanged:(id)fp8;
- (id)localizedTitleForCollection:(id)fp8;
- (id)segmentedControlItemForCollection:(id)fp8;
- (void)_setupCollections;
- (id)collectionsParentedInBookmarks;
- (BOOL)rebaseOnAncestorBookmark:(id)fp8 skipOffset:(unsigned int)fp12;
- (BOOL)rebaseOnDescendentBookmark:(id)fp8;
- (void)updatePanelForTabDocument:(id)fp8;
- (void)bookmarkSourceContentsChanged:(id)fp8;
- (void)_updateClearHistoryButton;
- (id)toolbarItems;
- (void)_createToolbarItems;
- (void)showLockedBookmarksDatabaseAlertForBookmarkAddition:(BOOL)fp8;
- (void)createNewFolder;
- (void)showInfoForBookmark:(id)fp8 inFolderNamed:(id)fp12;
- (void)removeAllHistoryItems;
- (void)edit;
- (void)done;
- (void)close;
- (void)setPanelState:(int)fp8;
- (void)reloadViewControllers;
- (BOOL)_inEditMode;
- (BOOL)_isEditingPanelState:(int)fp8;
- (void)_popFromKeyboardReturn;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (id)rotatingFooterView;
- (void)_getRotationContentSettings:(CDAnonymousStruct1 *)fp8;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)setRootBookmark:(id)fp8 skipOffset:(unsigned int)fp12;
- (id)rootBookmark;
- (id)topmostStateRestoringViewController;
- (id)topCloudTabViewController;
- (id)topReadingListViewController;
- (id)topBookmarksTableViewController;
- (id)topHistoryTableViewController;
- (id)initWithBookmarksDelegate:(id)fp8 topBookmark:(id)fp12 skipOffset:(int)fp16;
- (id)initWithBookmarksDelegate:(id)fp8 topBookmark:(id)fp12;

@end

@interface BookmarksTableViewController : PopoverSizingTableViewController <BookmarksPanelStateRestoring>
{
    UIBarButtonItem *_bookmarksEditDoneButtonItem;
    UIBarButtonItem *_bookmarksNewFolderButtonItem;
    NSIndexPath *_chosenCellIndexPath;
    WebBookmark *_chosenBookmark;
    WebBookmarkCollection *_collection;
    WebBookmarkList *_bookmarkList;
    WebBookmark *_folder;
    unsigned int _skipOffset;
    float _restoredScrollPosition;
}

- (id)folder;
- (id)collectionType;
- (void)restoreScrollPosition:(float)fp8;
- (float)currentScrollPosition;
- (BOOL)restoreStateWithDictionary:(id)fp8;
- (id)currentStateDictionary;
- (id)tableView:(id)fp8 targetIndexPathForMoveFromRowAtIndexPath:(id)fp12 toProposedIndexPath:(id)fp16;
- (int)tableView:(id)fp8 editingStyleForRowAtIndexPath:(id)fp12;
- (void)tableView:(id)fp8 didEndEditingRowAtIndexPath:(id)fp12;
- (void)tableView:(id)fp8 willBeginEditingRowAtIndexPath:(id)fp12;
- (void)_leaveSwipeToDeleteMode;
- (BOOL)tableView:(id)fp8 shouldIndentWhileEditingRowAtIndexPath:(id)fp12;
- (void)tableView:(id)fp8 moveRowAtIndexPath:(id)fp12 toIndexPath:(id)fp16;
- (BOOL)tableView:(id)fp8 canMoveRowAtIndexPath:(id)fp12;
- (void)tableView:(id)fp8 commitEditingStyle:(int)fp12 forRowAtIndexPath:(id)fp16;
- (BOOL)tableView:(id)fp8 canEditRowAtIndexPath:(id)fp12;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 willSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (id)_bookmarkAtIndexPath:(id)fp8;
- (int)_bookmarkListIndexFromIndexPath:(id)fp8;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (unsigned int)_numberOfRowsInsertedBeforeRootBookmarks;
- (id)_collectionForRowAtIndexPath:(id)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)viewDidLoad;
- (void)_newFolder;
- (void)_done;
- (void)cancelCurrentEdit;
- (void)_toggleEditing;
- (void)setEditing:(BOOL)fp8 animated:(BOOL)fp12;
- (id)bookmarksNavigationController;
- (void)dealloc;
- (void)setFolder:(id)fp8;
- (unsigned int)folderID;
- (void)reloadBookmarks;
- (void)_recreateBookmarkList;
- (BOOL)_inRootFolder;
- (id)initWithFolder:(id)fp8 inCollection:(id)fp12 skipOffset:(unsigned int)fp16;
- (id)initWithFolder:(id)fp8 inCollection:(id)fp12;

@end

@interface BookmarkTextEntryTableViewCell : _AITFireProbe <UITextFieldDelegate>
{
    UITextField *_textField;
}

- (void)dealloc;
- (id)textField;
- (void)setUserInteractionEnabled:(BOOL)fp8;
- (void)setHighlighted:(BOOL)fp8 animated:(BOOL)fp12;
- (BOOL)textFieldShouldReturn:(id)fp8;
- (BOOL)textFieldShouldBeginEditing:(id)fp8;
- (void)layoutSubviews;
- (id)initWithText:(id)fp8 autoCapsType:(int)fp12;

@end

@interface BookmarkTextEntryTableViewController : _AITFireProbe <UITableViewDelegate, UITableViewDataSource>
{
    id <BookmarkTextEntryTableViewControllerDelegate> _delegate;
    NSString *_initialText;
    int _autoCapsType;
    UITableView *_table;
    BookmarkTextEntryTableViewCell *_textEntryCell;
}

- (void)dealloc;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)layoutViews;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (void)loadView;
- (id)initWithBookmarkInfoViewField:(int)fp8 text:(id)fp12 autoCapsType:(int)fp16 delegate:(id)fp20;

@end

@interface MobileSafariWindow : _AITFireProbe
{
}

- (void)handleStatusBarChangeFromHeight:(float)fp8 toHeight:(float)fp12;

@end

@interface BrowserController : _AITFireProbe <BookmarksNavigationControllerDelegate, BrowserToolbarDelegate, CloudTabNavigationControllerDelegate, TabDocumentDelegate, BrowserPanel, MFMailComposeViewControllerDelegate, UIActionSheetDelegate, UIScrollViewDelegate, UISplitViewControllerDelegate, FindOnPageToolbarDelegate, UIWebPDFViewHandlerDelegate>
{
    UIWindow *_window;
    TabController *_tabController;
    BrowserToolbar *_buttonBar;
    BrowserRootViewController *_rootViewController;
    AddressView *_addressView;
    UIView *_backgroundColorView;
    UIScrollView *_scrollView;
    UIWebBrowserView *_browserView;
    UITransitionView *_transitionView;
    UIView *_pageView;
    id _lockedBookmarksDatabaseAlert;
    QuickLookBannerController *_quickLookBannerController;
    UITapGestureRecognizer *_quickLookTapRecognizer;
    BOOL _tabBarItemsFixed;
    id <BrowserPanel> _browserPanel;
    id <BrowserPanel> _nextBrowserPanel;
    RotatablePopoverController *_currentPopoverController;
    BOOL _isShowingCurrentPanel;
    NSURL *_mailToURL;
    PKPass *_passCard;
    NSMutableArray *_documentsPendingClose;
    struct CGRect _nextPanelPresentationRectInToolbar;
    BOOL _isRotating;
    int _orientation;
    int _previousOrientation;
    BOOL _isZooming;
    BOOL _isProgressEnabled;
    float _progress;
    BOOL _resourcesLoading;
    BOOL _showingProgressIndicator;
    TabDocument *_documentWhoseProgressIsShown;
    NSTimer *_hideAddressViewTimer;
    unsigned int _addressViewPinCount;
    NSTimer *_idleTimerDurationTimer;
    double _idleTimerDuration;
    int _currentlyLoadingResourcesCount;
    unsigned int _coalescedUpdateMask;
    BOOL _isRunningTabExposeTest;
    unsigned int _tabExposeTestLoadCount;
    unsigned int _tabExposeTestIterationsRemaining;
    NSString *_currentLocaleIdentifier;
    BOOL _geolocationDialogAllowed;
    BOOL _antiPhishingServiceInitialized;
    BOOL _isPrivateBrowsingEnabled;
    WebUIAuthenticationManager *_authenticationManager;
    TabSnapshotContext *_asynchronousTabSnapshotContext;
    NSRecursiveLock *_asynchronousTabSnapshotContextLock;
    WebFrame *_frameToBePrinted;
    int _currentFindOnPageResultNumber;
    BOOL _zoomToHighlightSelection;
    BOOL _leaveKeyboardUpOnPanelReveal;
    struct CGRect _inputViewScreenBoundsAfterRotation;
    float _lastAdjustmentForKeyboard;
    struct __CFDateFormatter *_dateFormatter;
    BrowserReaderView *_readerView;
    BOOL _readerViewIsStale;
    BOOL _readerShouldBeShownIfPossible;
    RecentlyClosedTabViewController *_recentlyClosedTabController;
    UIButton *_overlayBackButton;
    UIButton *_overlayForwardButton;
    UIButton *_overlayBookmarksButton;
    UIButton *_overlayTabExposeButton;
    UIButton *_overlayExitFullscreenButton;
    UIView *_fullscreenScrollToTopInitiatorView;
    UIStatusBarCorners *_fullscreenTopCornersView;
    UIStatusBarCorners *_fullscreenBottomCornersView;
    BOOL _overlayViewsVisible;
    NSString *_fileDownloadPath;
    BOOL _cloudTabsEnabled;
    BOOL _interfaceFillsScreen;
    BOOL _inFullscreenMode;
}

+ (void)releaseSharedBrowserController;
+ (id)sharedBrowserController;
- (BOOL)isInFullscreenMode;
- (BOOL)interfaceFillsScreen;
- (BOOL)areCloudTabsEnabled;
- (void)setReaderShouldBeShownIfPossible:(BOOL)fp8;
- (BOOL)readerShouldBeShownIfPossible;
- (void)setReaderViewIsStale:(BOOL)fp8;
- (BOOL)readerViewIsStale;
- (void)setPassCard:(id)fp8;
- (id)passCard;
- (void)setMailToURL:(id)fp8;
- (id)mailToURL;
- (void)setCurrentPopoverController:(id)fp8;
- (id)currentPopoverController;
- (id).cxx_construct;
- (id)hostViewForLinkSheet:(id)fp8;
- (id)pdfViewHandler:(id)fp8 actionsForURL:(id)fp12 suggestedActions:(id)fp16;
- (id)_addToReadingListActionForURL:(id)fp8;
- (id)_openInNewPagePDFLinkActionForURL:(id)fp8;
- (void)_animateWithActionInfo:(id)fp8 intoButton:(int)fp12 afterLinkImageDisappears:(id)fp(null);
- (void)_animateLinkImage:(struct CGImage *)fp8 flipped:(BOOL)fp12 fromRect:(struct CGRect)fp16 intoButton:(int)fp32 inView:(id)fp36 afterLinkImageDisappears:(id)fp(null);
- (void)highlightSearchResultBounds:(struct CGRect)fp8 resultRects:(id)fp24 contentViews:(id)fp28 forPDFViewHandler:(id)fp32;
- (void)pdfViewHandler:(id)fp8 linkClicked:(id)fp12;
- (void)pdfViewHandler:(id)fp8 willClickLink:(id)fp12;
- (id)_tabDocumentForPDFViewHandler:(id)fp8;
- (struct CGPoint)originForPDFPageLabelViewWithHandler:(id)fp8 proposedOrigin:(struct CGPoint)fp12;
- (struct CGRect)frameForPDFViewWithHandler:(id)fp8 proposedFrame:(struct CGRect)fp12;
- (void)_setFrameToBePrinted:(id)fp8;
- (id)_frameToBePrinted;
- (BOOL)addReadingListBookmarkForCurrentTabUpdatingController:(id)fp8;
- (id)readerView;
- (struct CGRect)frameForReaderView;
- (void)hideReaderForTabDocument:(id)fp8 animated:(BOOL)fp12 deactivationMode:(int)fp16;
- (void)showReaderForTabDocument:(id)fp8 animated:(BOOL)fp12;
- (void)setShowingReader:(BOOL)fp8 animated:(BOOL)fp12;
- (BOOL)isShowingReader;
- (int)currentResultIndex;
- (BOOL)hasMatches;
- (void)updateSearchText:(id)fp8;
- (void)done;
- (void)next;
- (void)previous;
- (id)textForToolbarLabel;
- (id)textForCurrentResultLabel;
- (void)updateQuickLookBannerViewFrame;
- (float)_pdfPageNumberLabelYOffset;
- (struct __CFDateFormatter *)dateFormatter;
- (void)setInFullscreenMode:(BOOL)fp8;
- (void)_setInFullscreenMode:(BOOL)fp8 layoutImmediately:(BOOL)fp12;
- (void)_updateFullscreenWithImmediateLayout:(BOOL)fp8;
- (void)setInterfaceFillsScreen:(BOOL)fp8;
- (void)_setInterfaceFillsScreen:(BOOL)fp8 layoutImmediately:(BOOL)fp12;
- (void)setScrollViewZoomEnabled:(BOOL)fp8;
- (void)_resizeToContentFrame;
- (void)updateOverlayViewsWithAnimationDuration:(double)fp8;
- (void)_addOverlayViews;
- (BOOL)_overlaysShouldBeVisible;
- (void)_makeOverlayViewsIfNecessary;
- (void)_scrollToTopInFullscreen;
- (void)setLeaveKeyboardUpOnPanelReveal:(BOOL)fp8;
- (void)_highlightNextMatch;
- (void)_highlightPreviousMatch;
- (void)_highlightFindOnPageMatch:(BOOL)fp8;
- (void)_highlightFindOnPageMatchForPDF:(BOOL)fp8 withPDFHandler:(id)fp12;
- (BOOL)_updateCurrentSearchIndex:(BOOL)fp8;
- (void)_updateCurrentResultLabel;
- (BOOL)_highlightSelection;
- (BOOL)updateHighlightBubbleWobble:(BOOL)fp8;
- (id)_currentPDFSearchResult;
- (id)containerViewForAuthenticationPanel;
- (void)cancelFromAuthenticationManager:(id)fp8 forChallenge:(id)fp12;
- (void)logInFromAuthenticationManager:(id)fp8 withCredential:(id)fp12 forChallenge:(id)fp16;
- (void)toggleAlwaysShowBookmarksBarMessageReceived;
- (void)tabDocumentSecureContentStatusHasChanged:(id)fp8;
- (void)setCookiePolicyMessageReceived;
- (void)userEmptiedCachesMessageReceived;
- (void)clearHistoryMessageReceived;
- (void)clearUserHistory;
- (void)clearAutoFillMessageReceived;
- (id)userAgentForURL:(id)fp8;
- (void)_asyncSnapshotForTabDocument:(id)fp8 withSize:(struct CGSize)fp12 maintainAspectRatio:(BOOL)fp20 completion:(id)fp(null);
- (id)snapshotForTabDocument:(id)fp8 withSize:(struct CGSize)fp12 maintainAspectRatio:(BOOL)fp20;
- (id)snapshotForTabDocument:(id)fp8 withSize:(struct CGSize)fp12;
- (void)iconSizedSnapshotForTabDocument:(id)fp8 withCompletion:(id)fp(null);
- (id)iconSizedSnapshotForTabDocument:(id)fp8;
- (id)snapshotForTabDocument:(id)fp8;
- (void)_takeSnapshotOnWebThread;
- (struct CGImage *)_createSnapshotForFrontView:(id)fp8 sourceRect:(struct CGRect)fp12 destinationSize:(struct CGSize)fp28 contentsScale:(float)fp36 useRenderServer:(BOOL)fp40;
- (void)prepareToTakeSnapshotOfTabDocument:(id)fp8 context:(id)fp12;
- (void)prepareToTakeSnapshotOfReaderInTabDocument:(id)fp8 context:(id)fp12;
- (void)_didFinishTakingSnapshotOnWebThread;
- (void)_restoreStateFromSnapshotContext:(id)fp8;
- (BOOL)isAtEndOfPage;
- (void)scrollDown;
- (BOOL)shouldHideOnSuspend;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (id)buttonBar;
- (id)keyboardSuperview;
- (void)updateInterface:(BOOL)fp8;
- (void)updatePanelsForTabDocument:(id)fp8;
- (void)updateBanners:(BOOL)fp8 forTabDocument:(id)fp12;
- (void)removeQuickLookBannerView;
- (void)toggleQuickLookBannerView;
- (void)showQuickLookBannerView;
- (struct CGRect)_quickLookFrame;
- (void)updateBackgroundColorForTabDocument:(id)fp8;
- (void)updateProgress:(BOOL)fp8 forTabDocument:(id)fp12;
- (void)updateTitle:(BOOL)fp8 forTabDocument:(id)fp12;
- (void)updateAddress:(BOOL)fp8 forTabDocument:(id)fp12;
- (void)setInitialZoomScaleForPPT:(float)fp8;
- (void)setProgressEnabled:(BOOL)fp8;
- (void)goToAddress:(id)fp8 fromAddressView:(id)fp12;
- (void)goForward;
- (void)goBack;
- (void)scrollViewWasRemoved:(id)fp8;
- (void)scrollViewDidScroll:(id)fp8;
- (void)scrollViewDidScrollToTop:(id)fp8;
- (BOOL)scrollViewShouldScrollToTop:(id)fp8;
- (void)scrollViewDidEndScrollingAnimation:(id)fp8;
- (void)scrollViewDidEndDecelerating:(id)fp8;
- (void)scrollViewDidEndDragging:(id)fp8 willDecelerate:(BOOL)fp12;
- (void)didCompleteScrolling;
- (void)didCompleteGestures;
- (void)didCompleteGesturesOrScrolling;
- (void)scrollViewWillBeginDragging:(id)fp8;
- (void)_updateEVOrganizationName;
- (void)updateQuickLookFrameViewIfNecessary;
- (void)updateButtons;
- (void)didReadDefaults;
- (void)carrierBundledChanged;
- (void)localeChanged:(struct __CFLocale *)fp8;
- (id)handleExternalURL:(id)fp8;
- (void)setupWithURL:(id)fp8;
- (void)clearRecentSearches;
- (void)addRecentSearch:(id)fp8;
- (id)recentSearchesMatchingPrefix:(id)fp8;
- (id)recentSearches;
- (void)saveRecentSearches:(id)fp8;
- (void)_initSubviews;
- (id)asynchronousTabSnapshotContextLock;
- (id)asynchronousTabSnapshotContext;
- (id)addressView;
- (BOOL)webViewRotateShouldCenterSelectionRect:(id)fp8;
- (void)webView:(id)fp8 willAssistFormNode:(id)fp12;
- (void)restoreStateFromHistoryItem:(id)fp8 forWebView:(id)fp12;
- (void)saveStateToHistoryItem:(id)fp8 forWebView:(id)fp12;
- (void)webViewMainFrameDidCommitLoad:(id)fp8;
- (void)webViewMainFrameDidFailLoad:(id)fp8 withError:(id)fp12;
- (void)webViewMainFrameDidFinishLoad:(id)fp8;
- (void)webViewMainFrameDidFirstVisuallyNonEmptyLayoutInFrame:(id)fp8;
- (void)webViewDidNotClick:(id)fp8;
- (void)webViewDidClick:(id)fp8;
- (void)webView:(id)fp8 willClickElement:(id)fp12;
- (void)webThreadWebViewDidLayout:(id)fp8;
- (void)webViewDidDrawTiles:(id)fp8;
- (void)webView:(id)fp8 didDrawRect:(struct CGRect)fp12;
- (void)view:(id)fp8 didSetFrame:(struct CGRect)fp12 oldFrame:(struct CGRect)fp28 asResultOfZoom:(BOOL)fp44;
- (void)didResetViewForNewPage:(id)fp8;
- (void)updateScrollViewContentSize;
- (struct CGSize)scrollViewContentSize;
- (void)updateScrollViewFrame;
- (struct CGRect)scrollViewFrameForBrowserSize:(struct CGSize)fp8;
- (void)updateScrollIndicatorTopInset;
- (void)updateBackgroundViewFrame;
- (void)updateWebViewSizeAttributes;
- (struct CGRect)contentFrameInScrollView;
- (float)_addressViewOverlapHeight;
- (float)_storeBannerOverlapHeight;
- (void)updateStoreBannerFrame;
- (float)_verticalOffsetForStoreBanner;
- (void)setButtonBarAlwaysInFront:(BOOL)fp8;
- (void)updateButtonBarFrameForBrowserPanel:(id)fp8;
- (void)updateButtonBarFrame;
- (void)updateButtonBarFrameForOrientation:(int)fp8 forBrowserPanel:(id)fp12;
- (void)updateButtonBarFrameForOrientation:(int)fp8;
- (float)buttonBarHeightForOrientation:(int)fp8;
- (float)buttonBarHeightForBarSize:(int)fp8;
- (void)updateAddressViewFrame;
- (struct CGRect)addressViewFrameWithContentOffset:(struct CGPoint)fp8;
- (struct CGRect)addressViewFrame;
- (struct CGRect)addressViewFrameWithLayoutFlags:(unsigned int)fp8;
- (unsigned int)currentAddressViewLayoutFlags;
- (float)_horizontalOffsetForAddressView;
- (id)tabController;
- (void)document:(id)fp8 changedView:(id)fp12;
- (void)setDocumentView:(id)fp8;
- (id)topBrowserView;
- (id)browserView;
- (void)webView:(id)fp8 decidePolicyForGeolocationRequestFromOrigin:(id)fp12 frame:(id)fp16 listener:(id)fp20;
- (void)webView:(id)fp8 printFrameView:(id)fp12;
- (BOOL)webViewShouldInterruptJavaScript:(id)fp8;
- (id)webView:(id)fp8 runJavaScriptTextInputPanelWithPrompt:(id)fp12 defaultText:(id)fp16 initiatedByFrame:(id)fp20;
- (BOOL)webView:(id)fp8 runJavaScriptConfirmPanelWithMessage:(id)fp12 initiatedByFrame:(id)fp16;
- (void)webView:(id)fp8 runJavaScriptAlertPanelWithMessage:(id)fp12 initiatedByFrame:(id)fp16;
- (void)_setCloudTabsEnabled:(BOOL)fp8;
- (void)clearPrivateBrowsingData;
- (BOOL)privateBrowsingEnabled;
- (void)_setPrivateBrowsingEnabled:(BOOL)fp8;
- (BOOL)_showingAModalAlertWillHang;
- (void)showDemoModeFeatureDisabledAlert;
- (void)showPrintingDuringLoadAlert;
- (void)loadURL:(id)fp8;
- (void)dealloc;
- (void)updateIdleTimerDuration;
- (void)_resetIdleTimer;
- (void)_setIdleTimerDuration:(double)fp8;
- (void)resume;
- (id)_topScrollView;
- (BOOL)isAnyPageLoaded;
- (void)suspendForEventsOnly:(BOOL)fp8;
- (void)willSuspend;
- (void)updateViewsAfterStatusBarChange;
- (id)window;
- (void)setBackgroundColor:(id)fp8;
- (int)buttonBarSize;
- (int)buttonBarSizeForOrientation:(int)fp8;
- (int)orientation;
- (void)setContentOffset:(struct CGPoint)fp8;
- (struct CGPoint)contentOffset;
- (void)setZoomScale:(float)fp8;
- (float)zoomScale;
- (id)zoomAndTabTestURL;
- (void)scrollViewDidEndZooming:(id)fp8 withView:(id)fp12 atScale:(float)fp16;
- (void)scrollViewDidZoom:(id)fp8;
- (struct CGSize)scrollView:(id)fp8 contentSizeForZoomScale:(float)fp12 withProposedSize:(struct CGSize)fp16;
- (void)scrollViewWillBeginZooming:(id)fp8 withView:(id)fp12;
- (id)viewForZoomingInScrollView:(id)fp8;
- (id)_pdfView;
- (void)_gesturesEnded;
- (void)didRotateFromInterfaceOrientation:(int)fp8;
- (void)getRotationContentSettings:(CDAnonymousStruct1 *)fp8;
- (id)rotatingFooterView;
- (id)rotatingHeaderView;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (float)heightToKeepVisible;
- (float)minimumVerticalContentOffset;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (BOOL)_isShowingFullScreenPlugInUI;
- (float)_maxZoomScale;
- (float)_minZoomScale;
- (BOOL)isZooming;
- (BOOL)isRotating;
- (void)cloudTabNavigationController:(id)fp8 didSelectCloudTab:(id)fp12;
- (void)goToHistoryURL:(id)fp8;
- (void)goToBookmark:(id)fp8;
- (void)showICSControllerForPath:(id)fp8;
- (void)showPassBookControllerForPass:(id)fp8;
- (void)beginEnteringURL;
- (void)mailComposeController:(id)fp8 didFinishWithResult:(int)fp12 error:(id)fp16;
- (void)composeEmailWithMailToURL:(id)fp8;
- (void)shareURLOrArticle;
- (void)popupAlert:(id)fp8;
- (void)presentAlertSheet:(id)fp8;
- (id)webView:(id)fp8 actionsForLinkElement:(id)fp12 withTargetURL:(id)fp16 suggestedActions:(id)fp20;
- (id)webView:(id)fp8 actionsForImageElement:(id)fp12 withTargetURL:(id)fp16 suggestedActions:(id)fp20;
- (id)_actionsForElement:(id)fp8 withTargetURL:(id)fp12 suggestedActions:(id)fp16;
- (id)_addToReadingListActionForElement:(id)fp8 withTargetURL:(id)fp12;
- (void)_animateSafariIconLinkFromPoint:(struct CGPoint)fp8;
- (id)_openInNewPageActionForElement:(id)fp8 withTargetURL:(id)fp12;
- (void)_animateTabDocument:(id)fp8 intoBackgroundFromLinkNode:(id)fp12;
- (void)_animateNode:(id)fp8 intoButton:(int)fp12 afterLinkImageDisappears:(id)fp(null);
- (id)superviewForImageSheetForWebView:(id)fp8;
- (void)_animateScrollToAddressField;
- (void)doSearch:(id)fp8 fromAddressView:(id)fp12;
- (void)_doSearch:(id)fp8;
- (void)presentForwardPopoverFromButtonBar;
- (void)presentBackPopoverFromButtonBar;
- (void)presentBackForwardController:(id)fp8 fromRect:(struct CGRect)fp12;
- (void)toggleCloudTabsFromButtonBar;
- (void)toggleFullscreenFromButtonBar;
- (void)showTabsFromButtonBar;
- (void)showActionPanelFromButtonBar;
- (void)toggleBookmarksFromButtonBar;
- (void)forwardFromButtonBar;
- (void)backFromButtonBar;
- (void)closeBrowserPanel:(id)fp8;
- (void)stopFromAddressView:(id)fp8;
- (void)reloadFromAddressView:(id)fp8;
- (BOOL)hideBrowserPanel;
- (BOOL)hideBrowserPanelType:(int)fp8;
- (BOOL)showBrowserPanelType:(int)fp8;
- (id)browserPanel;
- (BOOL)_togglePanelType:(int)fp8;
- (void)_transitionToBrowserPanel:(id)fp8;
- (void)browserPanel:(id)fp8 didChangeState:(int)fp12;
- (void)actionSheet:(id)fp8 clickedButtonAtIndex:(int)fp12;
- (void)actionSheet:(id)fp8 didDismissWithButtonIndex:(int)fp12;
- (void)didPresentActionSheet:(id)fp8;
- (void)alertView:(id)fp8 clickedButtonAtIndex:(int)fp12;
- (void)alertView:(id)fp8 didDismissWithButtonIndex:(int)fp12;
- (void)didPresentAlertView:(id)fp8;
- (void)showLockedBookmarksDatabaseAlertInView:(id)fp8 forBookmarkAddition:(BOOL)fp12;
- (void)showLockedBookmarksDatabaseAlertForBookmarkAdditionAfterDelay;
- (void)_delayedShowLockedBookmarksDatabaseAlertForBookmarkAddition;
- (void)sheetControllerDidHideSheet:(id)fp8;
- (void)sheetControllerDidShowSheet:(id)fp8;
- (void)didHideBrowserPanel:(id)fp8;
- (id)_panelForPanelType:(int)fp8;
- (void)willHideBrowserPanel:(id)fp8;
- (void)didShowBrowserPanel:(id)fp8;
- (void)willShowBrowserPanel:(id)fp8;
- (void)resignWebViewFirstResponder;
- (void)_updateBrowsingStyleForNextPanel:(id)fp8;
- (BOOL)_shouldShowButtonBarForPanel:(id)fp8;
- (void)_setShowingButtonBar:(BOOL)fp8;
- (void)_setNextBrowserPanel:(id)fp8;
- (void)setBrowserPanel:(id)fp8;
- (void)_setShowingCurrentPanel:(BOOL)fp8;
- (void)_setShowingCurrentPanel:(BOOL)fp8 animate:(BOOL)fp12;
- (void)sheetController:(id)fp8 performAction:(int)fp12 forAlert:(id)fp16;
- (void)_setShowingAlert:(BOOL)fp8;
- (void)_setEnteringURL:(BOOL)fp8;
- (void)_setUserInteractionEnabled:(BOOL)fp8;
- (void)_setShowingFindOnPagePanel:(BOOL)fp8;
- (id)_hostForFindOnPagePanel;
- (BOOL)createAndAddToHomeScreenBundleForWebClip:(id)fp8;
- (void)_setShowingActionPanel:(BOOL)fp8 animate:(BOOL)fp12;
- (void)_setShowingICSController:(BOOL)fp8;
- (void)_setShowingPassBookController:(BOOL)fp8;
- (void)_setShowingPrintPanel:(BOOL)fp8;
- (void)_setShowingMailComposePanel:(BOOL)fp8;
- (void)_setShowingBookmarks:(BOOL)fp8 animate:(BOOL)fp12;
- (void)_forceDismissModalViewController;
- (void)_forceDismissModalViewController:(BOOL)fp8;
- (void)dismissCurrentPopover:(BOOL)fp8;
- (void)dismissCurrentPopover;
- (void)_presentModalViewController:(id)fp8 fromRectInToolbar:(struct CGRect)fp12;
- (id)_panelSuperview;
- (void)checkForSyncedDatabase;
- (void)fraudWarningsToggledFromSettings;
- (void)initializeAntiPhishingServiceIfNeeded;
- (void)_shutDownAntiPhishingService;
- (void)_initializeAntiPhishingService;
- (void)setStoreBannerPinnedToTop:(BOOL)fp8 forTabDocument:(id)fp12;
- (void)removeStoreBannerFromTabDocument:(id)fp8 animated:(BOOL)fp12;
- (void)setShowingStoreBanner:(id)fp8 isShowing:(BOOL)fp12;
- (void)composeEmailWithMailToURL:(id)fp8 forTabDocument:(id)fp12;
- (void)finishedTabExposeTest;
- (BOOL)isRunningTabExposeTest;
- (void)runTabExposeTest;
- (void)_runTabExposeTest;
- (BOOL)prepareTabExposeTest;
- (void)_addAuthenticationChallenge:(id)fp8 displayNow:(BOOL)fp12;
- (void)webViewClose:(id)fp8;
- (BOOL)closePendingDocuments;
- (void)webViewFocus:(id)fp8;
- (id)webView:(id)fp8 createWebViewWithRequest:(id)fp12;
- (id)loadURLInNewWindow:(id)fp8 inBackground:(BOOL)fp12 animated:(BOOL)fp16 fromExternalApplication:(BOOL)fp20;
- (id)loadURLInNewWindow:(id)fp8 inBackground:(BOOL)fp12 animated:(BOOL)fp16;
- (id)loadURLInNewWindow:(id)fp8 inBackground:(BOOL)fp12;
- (id)_blankTabDocumentToReuse;
- (struct CGRect)frameWhenReturningFromExpose;
- (struct CGRect)snapshotFrameForCurrentScrollViewContentOffset;
- (struct CGRect)defaultScreenShotFrame;
- (void)tabController:(id)fp8 didSwitchFromTabDocument:(id)fp12 toTabDocument:(id)fp16 inBackground:(BOOL)fp20;
- (void)switchFromTabDocument:(id)fp8 toTabDocument:(id)fp12 inBackground:(BOOL)fp16;
- (void)resetViewOnTabDocument:(id)fp8;
- (void)setShowingTabs:(BOOL)fp8;
- (void)_updateTabExposeFrameAndThumbnails;
- (void)_dirtyAllThumbnails;
- (struct CGRect)tabControllerFrame;
- (void)hideAlertForTabDocument:(id)fp8;
- (void)showAlertForTabDocument:(id)fp8;
- (void)tabDocument:(id)fp8 didCancelAuthenticationChallenge:(id)fp12;
- (void)tabDocument:(id)fp8 didReceiveAuthenticationChallenge:(id)fp12 fromDataSource:(id)fp16;
- (void)tabDocumentStoppedLoadingResource:(id)fp8;
- (void)tabDocumentStartedLoadingResource:(id)fp8;
- (void)didStopLoadingResource;
- (void)didStartLoadingResource;
- (void)tabDocument:(id)fp8 progressChanged:(float)fp12;
- (void)tabDocumentProgressDidStall:(id)fp8;
- (void)tabDocumentDidUpdateBackForward:(id)fp8;
- (void)tabDocumentDidUpdateTitle:(id)fp8;
- (void)tabDocument:(id)fp8 didFinishLoadingWithError:(BOOL)fp12;
- (void)tabDocumentDidStartLoading:(id)fp8;
- (void)tabDocumentDidUpdateURL:(id)fp8;
- (BOOL)_canUpdateInterfaceWithTabDocument:(id)fp8;
- (void)updateSearchEngine;
- (void)setResourcesLoading:(BOOL)fp8;
- (void)setProgress:(float)fp8 forceUpdate:(BOOL)fp12;
- (void)_updateProgressIndicator;
- (void)_inputViewWillRotate:(id)fp8;
- (void)_keyboardWillHide:(id)fp8;
- (void)_keyboardDidShow:(id)fp8;
- (void)_keyboardWillShow:(id)fp8;
- (void)setTitleTextViewNeedsUpdate:(BOOL)fp8;
- (void)setEllipsedTextViewNeedsUpdate:(BOOL)fp8;
- (void)setReloadImageViewNeedsUpdate:(BOOL)fp8;
- (void)_performCoalescedUpdate:(BOOL)fp8 type:(int)fp12;
- (void)performCoalescedUpdates;
- (void)animationDidStop:(id)fp8 finished:(id)fp12 context:(void *)fp16;
- (void)addressViewWillHideProgress:(id)fp8 withDelay:(double)fp12;
- (void)_hideAddressView;
- (void)addressViewWillShowProgress:(id)fp8;
- (void)_setHideAddressViewTimer:(id)fp8;
- (void)unpinAddressView;
- (void)pinAddressView;
- (void)_animateAddressViewPinned:(BOOL)fp8;
- (void)updateAddressViewSlideAnimation;
- (void)_updateAddressViewSlideAnimation:(id)fp8;

@end

@interface BrowserMailComposeViewController : _AITFireProbe <BrowserPanel, UINavigationControllerDelegate>
{
}

- (BOOL)shouldHideOnSuspend;
- (BOOL)shouldShowButtonBar;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (void)applicationDidResume;
- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)navigationController:(id)fp8 didShowViewController:(id)fp12 animated:(BOOL)fp16;
- (id)initWithURL:(id)fp8 mailComposeDelegate:(id)fp12;

@end

@interface BrowserPanelViewController : _AITFireProbe <BrowserPanel>
{
    int _panelType;
    int _panelState;
}

- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (id)initWithPanelType:(int)fp8;

@end

@interface BrowserReaderView : _AITFireProbe <RotatablePopoverControllerDelegate, UIWebViewDelegate>
{
    ReaderWebView *_webContentView;
    ReaderContext *_readerContext;
    UIControl *_fadeView;
    UIImageView *_fadeTopView;
    UIImageView *_fadeBottomView;
    UIButton *_fontButton;
    UIView *_headerView;
    UIButton *_doneButton;
    UIButton *_actionButton;
    UIView *_singleLineView;
    NSMutableArray *_shadows;
    BOOL _isAnimating;
    UIView *_fontButtonClipperView;
    UIView *_bottomFadeClipperView;
    int _savedStatusBarStyle;
}

- (id)webView;
- (void)uiWebView:(id)fp8 didClearWindowObject:(id)fp12 forFrame:(id)fp16;
- (BOOL)webView:(id)fp8 shouldStartLoadWithRequest:(id)fp12 navigationType:(int)fp16;
- (void)adoptFullScreenScrollToTopIndicatorView:(id)fp8;
- (int)topScrollOffset;
- (void)_setAnimating:(BOOL)fp8;
- (void)_updateBackgroundShadows;
- (void)_initBackgroundShadows;
- (void)_initTopAndBottomFades;
- (void)_actionButtonClicked;
- (void)popoverControllerDidDismissPopover:(id)fp8;
- (void)popoverController:(id)fp8 willPresentAfterRotationToInterfaceOrientation:(int)fp12;
- (void)_showFontPopoverControl;
- (struct CGRect)_fontPopoverPresentationRect;
- (void)updateSubviews;
- (void)_setScrollIndicatorInset:(float)fp8 contentInset:(float)fp12;
- (struct CGRect)_frameForWebContentView;
- (float)_defaultContentViewWidth;
- (void)_fadeTapped;
- (void)_cancel;
- (void)_removeAnimationFinished;
- (void)_slideInAnimationFinished;
- (void)didHideTabExposeView;
- (void)willHideTabExposeViewWithDuration:(double)fp8;
- (void)didShowTabExposeView;
- (void)willShowTabExposeViewWithDuration:(double)fp8;
- (void)_hideWebViewAndShadowViews:(BOOL)fp8;
- (void)didAnimateRotate;
- (void)willAnimateRotate;
- (void)_showInnerShadowsAndClipBottomFade:(BOOL)fp8;
- (void)removeFromSuperview:(BOOL)fp8;
- (void)showAboveView:(id)fp8 animated:(BOOL)fp12;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8 readerContext:(id)fp24;

@end

@interface BrowserRootViewController : _AITFireProbe
{
    int _lastKnownOrientation;
}

- (void)setLastKnownOrientation:(int)fp8;
- (int)lastKnownOrientation;
- (void)didRotateFromInterfaceOrientation:(int)fp8;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)_getRotationContentSettings:(CDAnonymousStruct1 *)fp8;
- (id)rotatingFooterView;
- (id)rotatingHeaderView;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (id)init;

@end

@interface SpacedBarButtonItem : _AITFireProbe
{
    UIBarButtonItem *_precedingFixedSpace;
}

- (id)precedingFixedSpace;
- (void)dealloc;
- (id)init;

@end

@interface BrowserToolbar : _AITFireProbe <WebBookmarksClientDelegateProtocol>
{
    id <BrowserPanel> _browserPanel;
    NSArray *_defaultToolbarItems;
    SpacedBarButtonItem *_backItem;
    SpacedBarButtonItem *_forwardItem;
    SpacedBarButtonItem *_actionItem;
    SpacedBarButtonItem *_bookmarksItem;
    SpacedBarButtonItem *_cloudTabsItem;
    SpacedBarButtonItem *_tabExposeItem;
    SpacedBarButtonItem *_fullscreenItem;
    BOOL _showingCloudTabButton;
    TabToolbarButton *_tabExposeView;
    BookmarksToolbarButton *_bookmarksView;
    UILongPressGestureRecognizer *_backLongPressRecognizer;
    UILongPressGestureRecognizer *_forwardLongPressRecognizer;
    CALayer *_linkImageContainerLayer;
    WebBookmarksServerProxy *_webBookmarksServerProxy;
    SpacedBarButtonItem *_bookmarksReadingListProgressItem;
    UIImageView *_bookmarksItemPreviousContentsView;
    id <BrowserToolbarDelegate> _browserDelegate;
}

- (BOOL)showingCloudTabButton;
- (id)browserDelegate;
- (void)setShowingCloudTabButton:(BOOL)fp8;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)setTabExposeButtonIndicator:(unsigned int)fp8;
- (void)setActionEnabled:(BOOL)fp8;
- (void)setForwardEnabled:(BOOL)fp8;
- (void)setBackEnabled:(BOOL)fp8;
- (void)bookmarksServerProxy:(id)fp8 didUpdateReadingListFetchingProgress:(id)fp12;
- (void)bookmarksServerProxyConnectionInvalidated:(id)fp8;
- (void)bookmarksServerProxyDidFinishFetching:(id)fp8;
- (void)_disconnectWebBookmarksServerProxy;
- (void)_connectWebBookmarksServerProxy;
- (void)updateButtonsAnimated:(BOOL)fp8;
- (void)_updateDefaultToolbarItems;
- (void)_installGestureRecognizers;
- (void)_backLongPressRecognized;
- (void)_forwardLongPressRecognized;
- (struct CGSize)sizeThatFits:(struct CGSize)fp8;
- (void)setBounds:(struct CGRect)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)setBrowserPanel:(id)fp8 animate:(BOOL)fp12;
- (void)dealloc;
- (id)_bookmarksItemLayer;
- (id)_tabExposeItemLayer;
- (id)initWithFrame:(struct CGRect)fp8;
- (void)setBrowserDelegate:(id)fp8;
- (void)_bookmarksButtonPressed;
- (void)_tabExposeButtonPressed;
- (id)_defaultSpacedItems;
- (struct CGRect)cloudTabsPopoverPresentationRect;
- (struct CGRect)bookmarksPopoverPresentationRect;
- (struct CGRect)actionPopoverPresentationRect;
- (struct CGRect)forwardPopoverPresentationRect;
- (struct CGRect)backPopoverPresentationRect;
- (void)_updateBookmarksItemBounds;
- (void)_updateTabExposeItemBounds;
- (void)_updateFixedSpacing;
- (void)_createFullScreenItemIfNeeded;
- (void)cancelLinkAnimations;
- (void)animationDidStop:(id)fp8 finished:(BOOL)fp12;
- (void)animateLinkImage:(struct CGImage *)fp8 flipped:(BOOL)fp12 fromRect:(struct CGRect)fp16 toLayer:(id)fp32 orButton:(int)fp36 inView:(id)fp40 afterLinkImageDisappears:(id)fp(null) afterButtonBounces:(void)fp44;
- (id)_pulseAnimationWithInitalTransform:(struct CATransform3D)fp8;
- (id)_bounceAnimationWithInitalTransform:(struct CATransform3D)fp8;
- (id)_toolbarItemAnimationTemplate;
- (id)_layerForButton:(int)fp8;
- (id)_fadeOutAnimation;
- (id)_scalingAnimationToFitLayerWithSize:(struct CGSize)fp8 intoItemWithSize:(struct CGSize)fp16 startingFromTransform:(struct CATransform3D)fp24;
- (id)_slightRotationAnimationStartingFromTransform:(struct CATransform3D)fp8 withRelativeAngle:(float)fp72;
- (id)_ballisticMovementAnimationFromPoint:(struct CGPoint)fp8 throughPoint:(struct CGPoint)fp16 toPoint:(struct CGPoint)fp24;

@end

@interface BrowserPassBookViewController : _AITFireProbe <BrowserPanel>
{
}

- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (int)pausesPages;
- (int)panelState;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)panelType;
- (id)initWithPass:(id)fp8;

@end

@interface CloudTabNavigationController : _AITFireProbe <BrowserPanel>
{
}

- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (BOOL)handlesAnimations;
- (int)pausesPages;
- (int)panelState;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)panelType;
- (id)initWithDelegate:(id)fp8;

@end

@interface CloudTab : _AITFireProbe
{
    NSDictionary *_readerScrollPositionDictionary;
    BOOL _isShowingReader;
    NSURL *_URL;
    NSString *_title;
}

- (void)setTitle:(id)fp8;
- (id)title;
- (void)setURL:(id)fp8;
- (id)URL;
- (void)setIsShowingReader:(BOOL)fp8;
- (BOOL)isShowingReader;
- (void)setReaderScrollPositionDictionary:(id)fp8;
- (id)readerScrollPositionDictionary;
- (id)description;
- (void)dealloc;
- (id)_dictionaryRepresentation;
- (id)_initWithDictionary:(id)fp8;

@end

@interface CloudTabDevice : _AITFireProbe
{
    NSString *_name;
    NSString *_UUID;
    NSArray *_tabs;
    NSDate *_lastModified;
}

- (id)name;
- (id)lastModified;
- (id)UUID;
- (id)tabs;
- (id)description;
- (void)dealloc;
- (id)_initWithDictionary:(id)fp8 UUID:(id)fp12;

@end

@interface CloudTabStore : _AITFireProbe
{
    NSUbiquitousKeyValueStore *_store;
}

+ (id)sharedCloudTabStore;
- (id)_currentDeviceUUID;
- (id)_pathForFileInSafariDirectory:(id)fp8;
- (BOOL)canSaveCloudTabsForCurrentDevice;
- (BOOL)cloudTabsAreEnabled;
- (void)requestUpdateFromServer;
- (void)pruneExpiredDevices;
- (void)saveCurrentDeviceTabsFromSuspendState;
- (void)saveCurrentDeviceCloudTabs:(id)fp8;
- (void)_removeConflictingDevice;
- (id)_dictionaryForCurrentDeviceWithCloudTabs:(id)fp8;
- (void)clearTabsForCurrentDevice;
- (void)_clearAllDevices;
- (id)syncedCloudTabDevices;
- (id)_syncedCloudTabDevicesIncludingCurrentDevice:(BOOL)fp8 emptyDevices:(BOOL)fp12;
- (id)currentDevice;
- (void)_storeDidUpdate;
- (void)dealloc;
- (id)init;
- (void)saveCurrentDeviceTabDocuments:(id)fp8;

@end

@interface CloudTabViewController : _AITFireProbe <BookmarksPanelStateRestoring, UITableViewDataSource, UITableViewDelegate>
{
    id <CloudTabNavigationControllerDelegate> _delegate;
    NSArray *_devices;
    NSTimer *_refreshTimer;
    EmptyCollectionExplanationView *_explanationView;
    UITableView *_tableView;
    float _restoredScrollPosition;
}

- (id)collectionType;
- (void)restoreScrollPosition:(float)fp8;
- (float)currentScrollPosition;
- (BOOL)restoreStateWithDictionary:(id)fp8;
- (id)currentStateDictionary;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (id)tableView:(id)fp8 viewForHeaderInSection:(int)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (id)_cloudTabNavigationController;
- (void)_refreshTimerDidFire:(id)fp8;
- (void)_clearRefreshTimer;
- (id)_tabForIndexPath:(id)fp8;
- (void)_reloadDevicesAndTable;
- (void)_loadDevices;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)_updatePopoverSize;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)_done;
- (void)_adjustTableViewInsetsForOrientation:(int)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)viewDidLoad;
- (id)_bookmarksNavigationController;
- (void)_clearExplanationView;
- (void)_setupExplanationView;
- (void)loadView;
- (void)dealloc;
- (id)initWithDelegate:(id)fp8;

@end

@interface DebugUtilities : _AITFireProbe
{
    int sampleToolProcessID;
    int sampleToolPtyFD;
    int sharkToolProcessID;
    NSString *sampleToolOutputPath;
    NSString *sharkToolOutputBase;
}

+ (id)sharedDebugUtilities;
- (BOOL)stopSharkTool;
- (BOOL)startSharkTool;
- (BOOL)startSharkToolWithIdentifier:(id)fp8;
- (void)setSharkToolOutputBase:(id)fp8;
- (BOOL)stopSampleTool;
- (BOOL)startSampleTool;
- (BOOL)startSampleToolWithIdentifier:(id)fp8;
- (void)setSampleToolOutputPath:(id)fp8;
- (void)dealloc;

@end

@interface FindOnPagePanel : _AITFireProbe <BrowserPanel, UIKeyInput>
{
    struct CGRect _highlightedRect;
    NSMutableArray *_highlightBubbleViews;
    FindOnPageToolbar *_accessory;
    BOOL _requiresKeyboard;
    NSArray *_toolbarItems;
    UILabel *_currentResultLabel;
    FindOnPageSegmentedControl *_previousNextControl;
    UIActivityIndicatorView *_indicatorView;
    BOOL _useActivityView;
    NSArray *_pdfHighlightViews;
}

+ (BOOL)expandedRectsWouldIntersect:(id)fp8;
- (BOOL)useActivityView;
- (void)setUseActivityView:(BOOL)fp8;
- (void)dealloc;
- (void)deleteBackward;
- (void)insertText:(id)fp8;
- (BOOL)hasText;
- (BOOL)canBecomeFirstResponder;
- (void)setRequiresKeyboard:(BOOL)fp8;
- (BOOL)_requiresKeyboardWhenFirstResponder;
- (void)updateUI;
- (id)findTextField;
- (id)inputAccessoryView;
- (void)setHighlightBubbleHidden:(BOOL)fp8;
- (void)setSelectionRect:(struct CGRect)fp8 textRects:(id)fp24 contentViews:(id)fp28 wobble:(BOOL)fp32;
- (void)setSelectionRect:(struct CGRect)fp8 textRects:(id)fp24 contentImage:(struct CGImage *)fp28 wobble:(BOOL)fp32;
- (void)_setSelectionRect:(struct CGRect)fp8 textRects:(id)fp24 contentImage:(struct CGImage *)fp28 contentViews:(id)fp32 wobble:(BOOL)fp36;
- (void)clearHighlightViews;
- (void)_addContentViewAtIndex:(unsigned int)fp8 withRect:(struct CGRect)fp12;
- (id)initWithFrame:(struct CGRect)fp8;
- (id)toolbarItems;
- (void)_findOnPageSegmentedControlValueChanged:(id)fp8;
- (void)_done;
- (BOOL)shouldShowToolbarInFullscreen;
- (BOOL)shouldHideOnSuspend;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (id)_currentResultLabel;
- (BOOL)_willShowActivityIndicator;

@end

@interface FindOnPageSegmentedControl : _AITFireProbe
{
}

- (id)initWithItems:(id)fp8;

@end

@interface FindOnPageToolbar : _AITFireProbe <UISearchBarDelegate>
{
    UIToolbar *_leftToolbar;
    UIToolbar *_rightToolbar;
    FindOnPageSegmentedControl *_previousNextControl;
    UIBarButtonItem *_previousNextControlBarButtonItem;
    UILabel *_currentMatchLabel;
    UIBarButtonItem *_currentMatchBarButtonItem;
    UISearchBar *_inputBar;
    UIBarButtonItem *_inputFieldBarButtonItem;
    UIBarButtonItem *_doneBarButtonItem;
    id <FindOnPageToolbarDelegate> _findDelegate;
    NSTimer *_textChangedUpdateTimer;
    BOOL _ownedByAddressView;
    UIBarButtonItem *_fixedSpaceItem;
    UIActivityIndicatorView *_indicatorView;
    BOOL _useActivityView;
}

+ (id)toolbarWithItems:(id)fp8;
+ (void)releaseSharedToolbar;
+ (id)sharedToolbar;
- (BOOL)useActivityView;
- (void)setFindDelegate:(id)fp8;
- (id)findDelegate;
- (void)setOwnedByAddressView:(BOOL)fp8;
- (BOOL)ownedByAddressView;
- (void)setUseActivityView:(BOOL)fp8;
- (void)dealloc;
- (id)inputField;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8;
- (void)_transitionToFindOnPageMode;
- (void)searchBar:(id)fp8 textDidChange:(id)fp12;
- (void)_doUpdateSearchText;
- (void)_done;
- (void)_previousNextSegmentedControlValueChanged:(id)fp8;
- (void)didEndSplitTransition;
- (void)updateUI;

@end

@interface FloatingHighlightButton : _AITFireProbe
{
    UIImageView *_highlightView;
    BOOL _showsTouchWhenHighlighted;
}

- (void)dealloc;
- (BOOL)showsTouchWhenHighlighted;
- (void)setShowsTouchWhenHighlighted:(BOOL)fp8;
- (void)setHighlighted:(BOOL)fp8;
- (void)willMoveToSuperview:(id)fp8;

@end

@interface FolderPickerItem : _AITFireProbe
{
    WebBookmark *_bookmark;
    int _depth;
}

- (id)icon;
- (id)title;
- (unsigned int)depth;
- (id)bookmark;
- (void)dealloc;
- (id)initWithBookmark:(id)fp8 depth:(unsigned int)fp12;

@end

@interface FolderPickerViewController : PopoverSizingTableViewController
{
    id <FolderPickerViewControllerDelegate> _delegate;
    WebBookmarkCollection *_collection;
    WebBookmark *movingBookmark;
    WebBookmark *parentBookmark;
    NSMutableArray *_bookmarkFolders;
    int _selectedFolderIndex;
}

- (void)setParentBookmark:(id)fp8;
- (id)parentBookmark;
- (void)setMovingBookmark:(id)fp8;
- (id)movingBookmark;
- (void)willShowForBookmark:(id)fp8 parent:(id)fp12;
- (void)_cancel;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (void)dealloc;
- (id)initWithDelegate:(id)fp8 bookmarkCollection:(id)fp12;
- (float)minimumHeightInPopoverView;
- (void)_bookmarksDidReload;
- (void)_bookmarksChanged;
- (id)_bookmarkFolders;
- (void)_appendFolderAndChildren:(id)fp8 toArray:(id)fp12 excludingFolderID:(unsigned int)fp16;
- (void)_appendFolderAndChildren:(id)fp8 toArray:(id)fp12 excludingFolderID:(unsigned int)fp16 depth:(unsigned int)fp20;

@end

@interface HighlightBubbleView : _AITFireProbe
{
    struct CGImage *_highlightedContent;
    struct CGPoint _highlightedContentOrigin;
}

- (id).cxx_construct;
- (void)dealloc;
- (void)setHighlightedContent:(struct CGImage *)fp8 withOrigin:(struct CGPoint)fp12;
- (void)drawRect:(struct CGRect)fp8;

@end

@interface History : _AITFireProbe
{
    WebHistory *_webHistory;
    BOOL _savePending;
    BOOL _isMergedWithSavedHistory;
}

+ (id)sharedHistory;
+ (id)historyURL;
- (void)savePendingChanges;
- (id)titleForItem:(id)fp8;
- (id)itemAtIndex:(unsigned int)fp8 fromDate:(id)fp12;
- (unsigned int)numberOfItemsFromDate:(id)fp8;
- (id)_topLevelItems;
- (unsigned int)_recentCount;
- (void)clearHistory;
- (id)webHistory;
- (void)mergeWithSavedHistoryIfNecessary;
- (void)dealloc;
- (id)init;
- (id)_stringForCalendarDate:(id)fp8;
- (void)receivedEntriesChangedNotification:(id)fp8;
- (void)_registerForHistoryNotifications;

@end

@interface HistoryTableViewController : PopoverSizingTableViewController <BookmarksPanelStateRestoring>
{
    NSCalendarDate *_date;
    float _restoredScrollPosition;
}

- (id)collectionType;
- (void)restoreScrollPosition:(float)fp8;
- (float)currentScrollPosition;
- (BOOL)restoreStateWithDictionary:(id)fp8;
- (id)currentStateDictionary;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)viewDidLoad;
- (void)_clearHistory;
- (void)updateClearHistoryButtonEnable;
- (void)_done;
- (id)bookmarksNavigationController;
- (void)dealloc;
- (id)date;
- (id)initForHistoryRoot;
- (id)initWithCalendarDate:(id)fp8;
- (void)historyChangedDestructively:(id)fp8;
- (void)historyChanged:(id)fp8;
- (id)_stringForCalendarDate:(id)fp8;

@end

@interface PagedTabExposeScrollView : _AITFireProbe
{
}

- (BOOL)touchesShouldCancelInContentView:(id)fp8;

@end

@interface TabScrollIndicatorContainerView : _AITFireProbe
{
    id _delegate;
}

- (void)touchesEnded:(id)fp8 withEvent:(id)fp12;
- (id)hitTest:(struct CGPoint)fp8 withEvent:(id)fp16;
- (void)setDelegate:(id)fp8;
- (void)dealloc;

@end

@interface PagedTabExposeHitTestingView : _AITFireProbe
{
    UIView *_targetView;
}

- (void)setTargetView:(id)fp8;
- (id)targetView;
- (id)hitTest:(struct CGPoint)fp8 withEvent:(id)fp16;

@end

@interface PagedTabExposeView : _AITFireProbe <UIScrollViewDelegate, RotatableBrowserPanel>
{
    NSObject<TabExposeDelegate> *_delegate;
    UIImageView *_backgroundGradientView;
    UIScrollView *_scrollView;
    PagedTabExposeHitTestingView *_scrollViewHitTestingView;
    UIView *_scrollViewContentView;
    UILabel *_tabTitleView;
    UILabel *_tabURLView;
    TabScrollIndicatorContainerView *_pageIndicatorContainerView;
    UIPageControl *_pageIndicator;
    unsigned int _documentIndex;
    NSArray *_toolbarItems;
    UIBarButtonItem *_newPageItem;
    BOOL _showing;
    BOOL _animating;
    BOOL _animatingAway;
    NSMutableArray *_tabDocuments;
    NSMutableArray *_pendingTabDocuments;
    NSArray *_allTabDocuments;
    TabDocument *_documentToActivate;
    TabDocument *_documentToClose;
}

+ (id)_textEtchColor;
+ (id)_urlColor;
+ (id)_urlFont;
+ (id)_titleFont;
- (BOOL)isShowing;
- (void)setDocumentToClose:(id)fp8;
- (id)documentToClose;
- (id)documentToActivate;
- (void)TabScrollIndicatorLeftPress:(id)fp8;
- (void)TabScrollIndicatorRightPress:(id)fp8;
- (void)_animateSlideLeft:(BOOL)fp8;
- (void)animateAddNewTabDocument:(id)fp8;
- (void)removeDocument:(id)fp8 withNextTabDocument:(id)fp12 animated:(BOOL)fp16 completion:(id)fp(null);
- (void)_slideTabButtonAtIndex:(int)fp8 startingAtIndex:(int)fp12 inDirection:(int)fp16 completion:(id)fp(null);
- (void)_layoutTabButton:(id)fp8 withIndex:(int)fp12;
- (void)slideTabButtonsIntoPlaceAfterClosingTabDocument:(id)fp8 completion:(id)fp(null);
- (void)animateScrollTabExposeView;
- (void)_finishedScrollLeftAnimation;
- (void)_animateScrollTabExposeViewLeft;
- (void)_finishedScrollRightAnimation;
- (void)_animateScrollTabExposeViewRight;
- (void)animateShowCloseButton:(BOOL)fp8;
- (void)scrollViewDidScroll:(id)fp8;
- (void)scrollToDocument:(id)fp8;
- (void)scrollToDocument:(id)fp8 animated:(BOOL)fp12 completion:(id)fp(null);
- (unsigned int)documentIndex;
- (void)_updateDocumentIndex;
- (float)_deltaFromCenteredForDocument:(id)fp8;
- (struct CGPoint)scrollViewContentOffsetForDocument:(id)fp8;
- (BOOL)shouldUpdateThumbnails;
- (void)updateDirtyThumbnailsForTimer:(BOOL)fp8;
- (void)hide;
- (void)_didHideWithActiveTabDocument:(id)fp8;
- (void)_didShow;
- (void)setDocumentToActivate:(id)fp8;
- (void)showAboveView:(id)fp8;
- (void)updateBackgroundGradient;
- (void)didRotateFromInterfaceOrientation:(int)fp8;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (id)toolbarItems;
- (void)_doneButtonPressed;
- (void)_updateNewPageButtonState;
- (void)_newPageButtonPressed;
- (BOOL)shouldShowToolbarInFullscreen;
- (BOOL)shouldHideOnSuspend;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (BOOL)handlesAnimations;
- (void)tile;
- (void)_tabButtonPressed:(id)fp8;
- (void)_activateCenteredDocument;
- (id)centeredTabDocument;
- (void)_updateTitleWithDocument:(id)fp8;
- (struct CGRect)_frameForButton:(id)fp8 withIndex:(unsigned int)fp12;
- (id)scrollView;
- (void)addTabButton:(id)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)setAnimating:(BOOL)fp8;
- (float)_maxThumbnailHeight;
- (BOOL)hasPendingTabDocuments;
- (void)removePendingTabDocument:(id)fp8;
- (void)addPendingTabDocument:(id)fp8;
- (void)setTabDocuments:(id)fp8;
- (void)_updateVisibleTabDocuments;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface PageLoadTestLogger : _AITFireProbe
{
    struct __sFILE *_out;
    struct __sFILE *_outfile;
    BOOL _waitUntilDone;
    unsigned int _headerLen;
}

- (void)pageLoadTestRunnerFinishedTest:(id)fp8;
- (void)pageLoadTestRunnerFinishedPageLoad:(id)fp8;
- (void)outputToFile:(id)fp8 waitUntilDone:(BOOL)fp12;
- (void)_printPageLoadStatistics:(id)fp8 forURL:(id)fp12 maxURLLength:(unsigned int)fp16;
- (void)dealloc;
- (id)init;

@end

@interface PageLoadStatistics : _AITFireProbe
{
    unsigned int parseCount;
    unsigned int layoutCount;
    unsigned int forcedLayoutCount;
    unsigned int drawCount;
    unsigned int frameCount;
    double parseDuration;
    double layoutDuration;
    double drawDuration;
    double loadDuration;
    double renderDuration;
    double firstVisualLayout;
    float framesPerSecond;
}

- (float)framesPerSecond;
- (double)firstVisualLayout;
- (double)renderDuration;
- (double)loadDuration;
- (double)drawDuration;
- (double)layoutDuration;
- (double)parseDuration;
- (unsigned int)frameCount;
- (unsigned int)drawCount;
- (unsigned int)forcedLayoutCount;
- (unsigned int)layoutCount;
- (unsigned int)parseCount;

@end

@interface PageLoad : _AITFireProbe
{
    NSURL *URL;
    NSDate *startDate;
    NSDate *endDate;
    NSDate *startRenderDate;
    NSDate *endRenderDate;
    NSDate *startRenderFrameCountDate;
    NSDate *endRenderFrameCountDate;
    long startRenderFrameCount;
    long endRenderFrameCount;
    PageLoadStatistics *statistics;
    int status;
    CDAnonymousStruct2 heapBefore;
    CDAnonymousStruct2 heapAfter;
}

+ (id)pageLoadWithURL:(id)fp8;
- (id)description;
- (CDAnonymousStruct2)heapDelta;
- (CDAnonymousStruct2)heapAfter;
- (CDAnonymousStruct2)heapBefore;
- (id)statusString;
- (int)status;
- (void)finishRenderTime:(id)fp8;
- (void)startRenderTime:(id)fp8;
- (void)finishRenderFps:(id)fp8;
- (void)startRenderFps:(id)fp8;
- (void)finish:(id)fp8 statistics:(id)fp12;
- (void)start:(id)fp8;
- (id)statistics;
- (id)URL;
- (void)clear;
- (void)dealloc;
- (id)initWithURL:(id)fp8;

@end

@interface PageLoadTestRunner : _AITFireProbe
{
    NSObject *delegate;
    PageLoadTestLogger *testLogger;
    PageLoadStatistics *statistics;
    BOOL running;
    NSMutableArray *commands;
    NSMutableArray *pageLoadArray;
    int repetitions;
    unsigned int currentPage;
    int currentRepetition;
    BOOL goingBack;
    int pagesTimed;
    double totalSquareRootsOfTime;
    int cacheClearDirective;
    int profilingDirective;
    BOOL checkForWorldLeaks;
    BOOL disableProgressBar;
    double savedDefaultTimeoutInterval;
}

+ (CDAnonymousStruct2)heapStatistics;
+ (id)worldLeaksString;
+ (BOOL)closingBrowserWindowsForWorldLeakTest;
+ (void)addLeakToArray:(id)fp8 count:(int)fp12 name:(id)fp16;
- (void)setCurrentPage:(int)fp8;
- (void)setCheckForWorldLeaks:(BOOL)fp8;
- (CDAnonymousStruct2)heapDelta;
- (CDAnonymousStruct2)heapAfter;
- (CDAnonymousStruct2)heapBefore;
- (int)currentRepetition;
- (int)repetitions;
- (void)setRepetitions:(int)fp8;
- (void)pageReaderDetectionDone:(id)fp8;
- (void)pageLoadPossiblyDone:(id)fp8;
- (void)pageLoadPossiblyStarted:(id)fp8;
- (void)readerDetectionDone:(id)fp8;
- (void)pageLoadDone:(id)fp8;
- (void)pageLoadStarted;
- (int)cacheClearDirective;
- (void)setCacheClearDirective:(int)fp8;
- (float)meanRenderFps;
- (double)meanRenderTime;
- (double)squareMeanRootTime;
- (double)meanTime;
- (void)addPageLoadTotals:(id)fp8;
- (void)stop;
- (void)startGoBackTest;
- (void)start;
- (void)startTest;
- (void)resetPageLoads;
- (void)setProfilingDirective:(int)fp8;
- (void)unpause;
- (void)pause;
- (BOOL)canGoToPreviousPage;
- (BOOL)canGoToNextPage;
- (void)goToPreviousPage;
- (void)goToNextPage;
- (void)goBack;
- (void)repetitionDone;
- (void)testDone;
- (BOOL)checkForWorldLeaksNow;
- (void)checkForWorldLeaksSoon;
- (void)closeBrowserWindowsAndFinishCheckingForWorldLeaks;
- (BOOL)finishCheckingForWorldLeaks;
- (void)closeBrowserWindows;
- (void)goToPage;
- (void)clearCacheWithURL:(id)fp8;
- (BOOL)running;
- (id)currentPageLoad;
- (id)pageLoadArray;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)dealloc;
- (id)statistics;
- (id)initForPLT2Suite:(id)fp8;
- (id)init;
- (_Bool)loadTestSuiteFile:(id)fp8;
- (_Bool)loadBundleTestSuiteFile:(id)fp8;
- (_Bool)loadTestSuite:(id)fp8;
- (void)runTestCommands:(id)fp8;
- (void)runOneCommand;
- (void)setSingleTestURL:(id)fp8;
- (void)setTestLogger:(id)fp8;
- (id)testLogger;

@end

@interface PopoverSizingTableViewController : _AITFireProbe
{
}

+ (float)standardMinimumHeightInPopoverView;
- (struct CGSize)contentSizeForViewInPopoverView;
- (float)minimumHeightInPopoverView;

@end

@interface PrintBrowserPanel : _AITFireProbe <BrowserPanel>
{
    BrowserPrintPageRenderer *_pageRenderer;
    WebFrame *_webFrame;
}

- (id)printControllerWithBrowserView:(id)fp8 URLString:(id)fp12 pageTitle:(id)fp16 printFooter:(BOOL)fp20;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (void)dealloc;
- (id)initWithWebFrame:(id)fp8;

@end

@interface ProgressView : _AITFireProbe <BackgroundDrawing>
{
    AddressView *_delegate;
    float _progress;
    BOOL _isShowingProgress;
    BOOL _drawActiveBackground;
    BOOL _usesPrivateBrowsingStyle;
    UIImageView *_backgroundImageView;
    UIImageView *_progressImageView;
}

- (void)setDrawActiveBackground:(BOOL)fp8;
- (void)drawBackgroundInContext:(struct CGContext *)fp8;
- (void)setDelegate:(id)fp8;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)layoutSubviews;
- (void)_updateImageViewGeometry:(id)fp8 forProgress:(float)fp12;
- (id)_backgroundImage;
- (id)_progressImage;
- (id)_inactiveBackgroundImage;
- (id)_activeBackgroundImage;
- (float)progress;
- (void)setProgress:(float)fp8;
- (void)_updateShowsProgress;
- (void)setFrame:(struct CGRect)fp8;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface QuickLookBannerController : _AITFireProbe <QuickLookBannerViewDelegate, UIDocumentInteractionControllerDelegate, UIDocumentInteractionControllerDelegatePrivate>
{
    QuickLookBannerView *_quickLookBannerView;
    UIDocumentInteractionController *_documentInteractionController;
    TabDocument *_tabDocument;
    BOOL _isShowingQuickLookOpenInMenu;
}

- (void)setDocumentInteractionController:(id)fp8;
- (id)documentInteractionController;
- (id)bannerView;
- (id)documentProxyForPreview:(id)fp8 name:(id)fp12 UTI:(id)fp16;
- (id)documentInteractionControllerURLOfDirectoryForUnzippedDocument:(id)fp8;
- (void)documentInteractionController:(id)fp8 willBeginSendingToApplication:(id)fp12;
- (void)documentInteractionControllerDidDismissOpenInMenu:(id)fp8;
- (void)documentInteractionControllerWillPresentOpenInMenu:(id)fp8;
- (void)openInOtherApplications:(id)fp8;
- (void)openInApplication:(id)fp8;
- (id)_urlForQuickLookDocument;
- (void)_savePDFDocumentToFileIfNeeded;
- (void)showBannerView;
- (void)hideBannerView;
- (void)_removeBannerViewTimer;
- (void)_addOrRestartBannerViewTimer;
- (void)dealloc;
- (id)initWithTabDocument:(id)fp8;

@end

@interface OpenInApplicationBarButtonItem : _AITFireProbe
{
    NSString *_applicationIdentifier;
}

- (void)setApplicationIdentifier:(id)fp8;
- (id)applicationIdentifier;
- (void)dealloc;

@end

@interface QuickLookBannerView : _AITFireProbe
{
    UIBarButtonItem *_fileNameItem;
    UIBarButtonItem *_flexibleSpaceItem;
    OpenInApplicationBarButtonItem *_openInApplicationItem;
    UIBarButtonItem *_openInOtherApplicationsItem;
    UIToolbar *_toolbar;
}

- (void)animateOut;
- (void)animateIn;
- (void)_animateTo:(float)fp8;
- (BOOL)updateWithQuickLookDocument:(id)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)_updateFileNameView;
- (void)dealloc;
- (BOOL)canScrollOffScreen;
- (float)bannerHeight;
- (id)initWithFrame:(struct CGRect)fp8 quickLookBannerViewDelegate:(id)fp24;

@end

@interface QuickLookDocument : _AITFireProbe
{
    LSDocumentProxy *_documentProxy;
    BOOL _needsQuickLookDocumentView;
    NSString *_savedPath;
    NSString *_savedPathWithProperExtension;
    BOOL _shouldDeleteSavedPath;
    BOOL _shouldDeleteSavedPathWithProperExtension;
    NSString *_fileName;
    NSString *_mimeType;
    NSString *_uti;
}

- (void)setUti:(id)fp8;
- (id)uti;
- (void)setMimeType:(id)fp8;
- (id)mimeType;
- (void)setFileName:(id)fp8;
- (id)fileName;
- (void)setSavedPathWithProperExtension:(id)fp8;
- (void)setSavedPath:(id)fp8;
- (id)savedPath;
- (BOOL)needsQuickLookDocumentView;
- (void)setDocumentProxy:(id)fp8;
- (void)addQuickLookPrintSettingsToPrintInfo:(id)fp8;
- (void)setSavedPathWithProperExtension:(id)fp8 shouldDelete:(BOOL)fp12;
- (void)setSavedPath:(id)fp8 shouldDelete:(BOOL)fp12;
- (id)savedPathWithProperExtension;
- (id)documentProxy;
- (void)_deleteSavedPathWithProperExtensionIfNecessary;
- (void)_deleteSavedPathIfNecessary;
- (void)dealloc;
- (id)initWithFileName:(id)fp8 mimeType:(id)fp12 uti:(id)fp16 needsQuickLookDocumentView:(BOOL)fp20;

@end

@interface QuickLookDocumentController : _AITFireProbe <QuickLookBannerViewDelegate, UIDocumentInteractionControllerDelegate, UIDocumentInteractionControllerDelegatePrivate>
{
    QuickLookDocumentView *_documentView;
    TabDocument *_tabDocument;
    UIDocumentInteractionController *_documentInteractionController;
    BOOL _isShowingQuickLookOpenInMenu;
}

- (void)setDocumentView:(id)fp8;
- (id)documentView;
- (void)setDocumentInteractionController:(id)fp8;
- (id)documentInteractionController;
- (id)documentProxyForPreview:(id)fp8 name:(id)fp12 UTI:(id)fp16;
- (void)documentInteractionController:(id)fp8 willBeginSendingToApplication:(id)fp12;
- (void)documentInteractionControllerDidDismissOpenInMenu:(id)fp8;
- (void)documentInteractionControllerWillPresentOpenInMenu:(id)fp8;
- (void)openInOtherApplications:(id)fp8;
- (void)openInApplication:(id)fp8;
- (id)_urlForQuickLookDocument;
- (void)dealloc;
- (id)initWithTabDocument:(id)fp8;

@end

@interface QLDocumentInfoView : _AITFireProbe
{
    UILabel *_documentNameLabel;
    UILabel *_documentSizeLabel;
    UIImageView *_iconImageView;
}

- (void)setIconImageView:(id)fp8;
- (id)iconImageView;
- (void)setDocumentSizeLabel:(id)fp8;
- (id)documentSizeLabel;
- (void)setDocumentNameLabel:(id)fp8;
- (id)documentNameLabel;
- (void)updateWithQuickLookDocument:(id)fp8;
- (id)_iconImageForDocumentProxy:(id)fp8;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface QLContentViewIPad : _AITFireProbe <QLContentView>
{
    QLDocumentInfoView *_documentInfoView;
    UIToolbar *_buttonBar;
    OpenInApplicationBarButtonItem *_defaultApplicationButtonItem;
    UIBarButtonItem *_otherApplicationsButtonItem;
}

- (void)updateWithQuickLookDocument:(id)fp8;
- (void)_updateOtherApplicationsButtonItem;
- (void)_updateDefaultApplicationButtonItem:(id)fp8 multipleApplications:(BOOL)fp12;
- (void)layoutSubviews;
- (void)showBanner;
- (void)hideBanner;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8 quickLookBannerViewDelegate:(id)fp24;

@end

@interface QLContentViewIPhone : _AITFireProbe <QLContentView>
{
    QLDocumentInfoView *_documentInfoView;
    QuickLookBannerView *_bannerView;
}

- (void)updateWithQuickLookDocument:(id)fp8;
- (void)showBanner;
- (void)hideBanner;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8 quickLookBannerViewDelegate:(id)fp24;

@end

@interface QLTransparentToolbar : _AITFireProbe
{
}

- (void)drawRect:(struct CGRect)fp8;

@end

@interface QuickLookDocumentView : _AITFireProbe
{
    UIView<QLContentView> *_contentView;
}

- (void)dealloc;
- (void)updateWithQuickLookDocument:(id)fp8;
- (void)showBanner;
- (void)hideBanner;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8 quickLookBannerViewDelegate:(id)fp24;

@end

@interface ReaderActionViewController : _AITFireProbe
{
    id <ReaderActionDelegate> _actionDelegate;
}

- (void)loadView;
- (id)initWithActionDelegate:(id)fp8;

@end

@interface ReaderActionView : _AITFireProbe
{
    UIButton *_increaseTextSizeButton;
    UIButton *_decreaseTextSizeButton;
}

+ (void)updateButtonStyle:(id)fp8;
- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)fp8 delegate:(id)fp24;

@end

@interface ReaderContext : _AITFireProbe <ReaderActionDelegate>
{
    int _retainCount;
    struct ReaderController *_readerController;
    struct ReaderJSController *_readerJSController;
    WebView *_webView;
    NSTimer *_clearUnusedReaderResourcesTimer;
    id <ReaderControllerDelegate> _delegate;
}

- (void)setDelegate:(id)fp8;
- (id)delegate;
- (struct ReaderController *)readerController;
- (id)webView;
- (void)decreaseTextSize;
- (void)increaseTextSize;
- (void)createArticleFinder;
- (BOOL)shouldCreateArticleFinder;
- (void)webView:(id)fp8 didClearWindowObject:(id)fp12 forFrame:(id)fp16;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (BOOL)networkIsReachable;
- (int)readerOperationMode;
- (void)_clearUnusedReaderResources;
- (void)cancelClearUnusedReaderResourcesTimer;
- (void)clearUnusedReaderResourcesSoon;
- (void)loadNewArticle;
- (void)loadReaderDocument;
- (id)readerURL;
- (void)_clearReaderViewAndController;
- (struct ReaderJSController *)_readerJSController;
- (void)dealloc;
- (void)initReaderJSController:(id)fp8;
- (id)mailingAndPrintingFrame;
- (BOOL)isReaderAvailable;
- (void)stopLoadingNextPage;
- (BOOL)isLoadingNextPage;
- (BOOL)hasMultiplePages;
- (void)clearAvailability;
- (void)clearReaderView;
- (void)createWebViewIfNeeded;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)initWithWebView:(id)fp8;

@end

@interface ReaderWebView : _AITFireProbe
{
    ReaderContext *_readerContext;
}

- (id)initWithReaderContext:(id)fp8;
- (void)view:(id)fp8 didSetFrame:(struct CGRect)fp12 oldFrame:(struct CGRect)fp28;
- (void)scrollViewDidScroll:(id)fp8;

@end

@interface ReadingListPreviewView : _AITFireProbe
{
    struct CGImage *_iconImage;
    NSString *_title;
    NSString *_host;
    NSString *_previewText;
    NSString *_archiveStatusText;
    BOOL _drawsIcon;
    BOOL _highlighted;
    BOOL _read;
    BOOL _makeRoomForProgressGear;
}

- (void)setHost:(id)fp8;
- (id)host;
- (void)setPreviewText:(id)fp8;
- (id)previewText;
- (void)setArchiveStatusText:(id)fp8;
- (id)archiveStatusText;
- (void)setDrawsIcon:(BOOL)fp8;
- (BOOL)drawsIcon;
- (void)setTitle:(id)fp8;
- (id)title;
- (BOOL)isHighlighted;
- (void)setRead:(BOOL)fp8;
- (BOOL)isRead;
- (void)drawRect:(struct CGRect)fp8;
- (void)_drawIcon;
- (id)_previewColor;
- (id)_textColor;
- (void)setHighlighted:(BOOL)fp8;
- (void)_setArchiveStatusTextOrPreviewTextForBookmark:(id)fp8;
- (void)setBookmark:(id)fp8 isArchiving:(BOOL)fp12;
- (void)setBookmark:(id)fp8;
- (struct CGImage *)_copyBestImageForBookmark:(id)fp8;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface ReadingListTableViewCell : _AITFireProbe
{
    ReadingListPreviewView *_previewView;
    UIImageView *_previousContentView;
    unsigned int _bookmarkID;
    UIActivityIndicatorView *_archiveProgressGear;
}

- (unsigned int)bookmarkID;
- (void)setSelected:(BOOL)fp8 animated:(BOOL)fp12;
- (void)didTransitionToState:(unsigned int)fp8;
- (void)willTransitionToState:(unsigned int)fp8;
- (void)_clearPreviousContentView;
- (void)setBookmark:(id)fp8 isArchiving:(BOOL)fp12;
- (void)setBookmark:(id)fp8;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(int)fp8 reuseIdentifier:(id)fp12;

@end

@interface ReadingListViewController : _AITFireProbe <BookmarksPanelStateRestoring, UITableViewDelegate, UITableViewDataSource, WebBookmarksClientDelegateProtocol>
{
    UISegmentedControl *_filterControl;
    UITableView *_tableView;
    WebBookmarkCollection *_collection;
    BOOL _showAllBookmarks;
    BOOL _networkIsReachable;
    WebBookmarkList *_readingList;
    WebBookmarksServerProxy *_webBookmarksServerProxy;
    NSString *_archivingBookmarkUUID;
    EmptyCollectionExplanationView *_explanationView;
    float _restoredScrollPosition;
    NSTimer *_deletionNotificationTimer;
}

- (BOOL)showingAllBookmarks;
- (void)bookmarksServerProxy:(id)fp8 didStopFetchingReadingListItem:(id)fp12;
- (void)bookmarksServerProxy:(id)fp8 didStartFetchingReadingListItem:(id)fp12;
- (void)bookmarksServerProxyConnectionInvalidated:(id)fp8;
- (void)bookmarksServerProxyDidFinishFetching:(id)fp8;
- (id)collectionType;
- (void)restoreScrollPosition:(float)fp8;
- (float)currentScrollPosition;
- (BOOL)restoreStateWithDictionary:(id)fp8;
- (id)currentStateDictionary;
- (void)scrollViewDidEndDecelerating:(id)fp8;
- (void)tableView:(id)fp8 commitEditingStyle:(int)fp12 forRowAtIndexPath:(id)fp16;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (int)numberOfSectionsInTableView:(id)fp8;
- (void)_disconnectWebBookmarksServerProxy;
- (void)_connectWebBookmarksServerProxy;
- (void)_postChangeNotification;
- (void)_scheduleDelayedChangeNotification;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)_updatePopoverSize;
- (void)_done;
- (void)didMarkBookmarkUnreadAtIndex:(unsigned int)fp8;
- (void)didAddNewReadingListBookmark;
- (void)_fetchIconsForVisibleReadingListItems;
- (void)_didDownloadIcons:(id)fp8;
- (void)_addReadingListItem;
- (void)_didChangeFilter;
- (void)_reloadReadingListAndTable;
- (void)_reloadReadingList;
- (void)_networkReachabilityChanged:(id)fp8;
- (id)_bookmarkAtIndexPath:(id)fp8;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)_adjustTableViewInsetsForOrientation:(int)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)viewDidLoad;
- (void)updateAddBookmarkButtonEnabledWithTabDocument:(id)fp8;
- (void)setAddBookmarkButtonEnabled:(BOOL)fp8;
- (void)loadView;
- (void)_clearExplanationView;
- (void)_setupExplanationView;
- (id)bookmarksNavigationController;
- (void)dealloc;
- (id)init;

@end

@interface RecentlyClosedTabViewController : _AITFireProbe
{
    NSMutableArray *_recentlyClosedTabs;
    id <RecentlyClosedTabViewControllerDelegate> _delegate;
}

- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 titleForHeaderInSection:(int)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (struct CGSize)contentSizeForViewInPopover;
- (void)viewWillAppear:(BOOL)fp8;
- (void)removeAllRecentlyClosedTabDocuments;
- (void)removeRecentlyClosedTabDocument:(id)fp8;
- (void)addRecentlyClosedTabDocument:(id)fp8;
- (void)dealloc;
- (id)initWithStyle:(int)fp8;

@end

@interface RotatableActionSheetPanel : _AITFireProbe <RotatableBrowserPanel, UIActionSheetDelegate>
{
    UIActionSheet *_sheet;
}

- (void)didRotateFromInterfaceOrientation:(int)fp8;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)willRotateToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)didPresentActionSheet:(id)fp8;
- (void)actionSheet:(id)fp8 didDismissWithButtonIndex:(int)fp12;
- (void)actionSheet:(id)fp8 willDismissWithButtonIndex:(int)fp12;
- (void)setVisible:(BOOL)fp8 animate:(BOOL)fp12;
- (BOOL)handlesAnimations;
- (int)pausesPages;
- (int)panelState;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)panelType;
- (void)dealloc;

@end

@interface RotatablePopoverController : _AITFireProbe
{
    struct CGRect _presentationRect;
    UIView *_presentationView;
    unsigned int _permittedArrowDirections;
    BOOL _supportsRotation;
}

- (void)setSupportsRotation:(BOOL)fp8;
- (BOOL)supportsRotation;
- (void)setPermittedArrowDirections:(unsigned int)fp8;
- (unsigned int)permittedArrowDirections;
- (void)setPresentationView:(id)fp8;
- (id)presentationView;
- (void)setPresentationRect:(struct CGRect)fp8;
- (struct CGRect)presentationRect;
- (void)presentPopoverAnimated:(BOOL)fp8;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)dealloc;
- (id)initWithContentViewController:(id)fp8;

@end

@interface SafariQueryCollectionRequest : _AITFireProbe
{
    NSString *_searchQuery;
    BOOL _hasIsPartialSearchQuery;
    BOOL _isPartialSearchQuery;
}

- (BOOL)isPartialSearchQuery;
- (void)setHasIsPartialSearchQuery:(BOOL)fp8;
- (BOOL)hasIsPartialSearchQuery;
- (void)setSearchQuery:(id)fp8;
- (id)searchQuery;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)fp8;
- (BOOL)readFrom:(id)fp8;
- (id)dictionaryRepresentation;
- (id)description;
- (void)setIsPartialSearchQuery:(BOOL)fp8;
- (BOOL)hasSearchQuery;
- (void)dealloc;

@end

@interface SafariQueryCollectionResponse : _AITFireProbe
{
}

- (void)writeTo:(id)fp8;
- (BOOL)readFrom:(id)fp8;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

@interface ScaleTestProcessor : TestProcessor
{
    float _scale;
    BOOL _rendering;
}

- (void)doneRendering;
- (void)setZoomScale:(float)fp8;
- (BOOL)performActionForTimer;

@end

@interface ScrollTestProcessor : TestProcessor
{
}

- (BOOL)performActionForTimer;

@end

@interface SearchEngineController : _AITFireProbe <NSURLConnectionDelegate, NSURLDownloadDelegate>
{
    NSMutableArray *searchEngines;
    int defaultSearchEngineIndex;
    NSString *_countryCode;
    NSString *_languageCode;
    NSString *_carrierCountryCode;
    NSString *_carrierName;
    NSString *_carrierNetworkCode;
}

+ (id)sharedInstance;
- (void)setCarrierNetworkCode:(id)fp8;
- (id)carrierNetworkCode;
- (void)setCarrierName:(id)fp8;
- (id)carrierName;
- (void)setCarrierCountryCode:(id)fp8;
- (id)carrierCountryCode;
- (void)setLanguageCode:(id)fp8;
- (id)languageCode;
- (void)setCountryCode:(id)fp8;
- (id)countryCode;
- (void)loadSystemProperties;
- (void)setSearchEngineInfoAsDefault:(id)fp8;
- (void)loadFallbackSearchEngines;
- (void)addSpecialSearchEngines;
- (id)engineInfoForScriptName:(id)fp8;
- (id)engineInfoFor:(id)fp8;
- (id)existingEngineInfoFor:(id)fp8;
- (id)defaultSearchEngine;
- (void)setDefaultSearchEngine:(id)fp8;
- (void)readDefaultSearchEngine;
- (id)description;
- (void)parseConfigData:(id)fp8;
- (BOOL)loadLocalConfigPlist:(id)fp8;
- (void)downloadRemoteConfigPlist;
- (void)downloadDidFail:(id)fp8;
- (void)downloadDidFinish:(id)fp8;
- (BOOL)shouldLoadRemoteConfigPlist;
- (void)loadConfigPlist;
- (void)dealloc;
- (void)reloadSearchEngines;
- (void)populateSearchEngines;
- (id)init;

@end

@interface SearchEngineInfo : _AITFireProbe
{
    NSString *_shortName;
    NSString *_scriptName;
    int _searchID;
    NSString *_searchURLTemplate;
    NSString *_suggestionsURLTemplate;
    NSDictionary *_topLevelDomains;
    NSString *_carrierInfo;
    NSMutableString *_searchURL;
    SearchEngineController *_controller;
}

+ (id)engineFromDictionary:(id)fp8 withController:(id)fp12;
- (void)setTopLevelDomains:(id)fp8;
- (id)topLevelDomains;
- (void)setSuggestionsURLTemplate:(id)fp8;
- (id)suggestionsURLTemplate;
- (void)setShortName:(id)fp8;
- (id)shortName;
- (void)setSearchURLTemplate:(id)fp8;
- (id)searchURLTemplate;
- (void)setSearchURL:(id)fp8;
- (id)searchURL;
- (void)setScriptName:(id)fp8;
- (id)scriptName;
- (void)setController:(id)fp8;
- (id)controller;
- (void)setCarrierInfo:(id)fp8;
- (id)carrierInfo;
- (void)dealloc;
- (id)description;
- (id)searchURLForQuery:(id)fp8;
- (void)setSearchURL;
- (id)getTopLevelDomainFor:(id)fp8;
- (int)searchID;
- (id)initWithName:(id)fp8 scriptName:(id)fp12 searchID:(int)fp16 searchTemplate:(id)fp20 suggestionsTemplate:(id)fp24 topLevelDomains:(id)fp28 controller:(id)fp32;

@end

@interface SetSearchEngineScriptObject : _AITFireProbe
{
    WebScriptObject *_windowObject;
}

- (id)invokeDefaultMethodWithArguments:(id)fp8;
- (void)dealloc;
- (id)initWithWindowObject:(id)fp8;

@end

@interface GetSearchEngineScriptObject : _AITFireProbe
{
}

- (id)invokeDefaultMethodWithArguments:(id)fp8;

@end

@interface CanSetSearchEngineScriptObject : _AITFireProbe
{
}

- (id)invokeDefaultMethodWithArguments:(id)fp8;

@end

@interface SearchQueryBuilder : _AITFireProbe
{
    NSString *queryString;
    SearchEngineInfo *engineInfo;
}

+ (id)searchQueryBuilderWithXWebSearchURL:(id)fp8;
+ (id)searchQueryBuilderWithQuery:(id)fp8;
- (id)searchEngineInfo;
- (BOOL)searchEngineIsDefault;
- (id)queryString;
- (id)searchURL;
- (id)initWithXWebSearchURL:(id)fp8;
- (void)dealloc;
- (id)initWithQueryString:(id)fp8;
- (id)initWithSearchEngineInfo:(id)fp8 queryString:(id)fp12;

@end

@interface SearchSuggestionManager : _AITFireProbe <NSURLConnectionDelegate>
{
    id _delegate;
    NSURLConnection *_suggestionConnection;
    NSMutableDictionary *_suggestionCache;
    NSMutableData *_suggestionData;
    NSString *_currentSearchString;
    NSString *_userAgentString;
}

- (id)suggestionStrings;
- (id)suggestionQueryStringForSearchString:(id)fp8;
- (void)dealloc;
- (void)clearCache;
- (BOOL)hasPendingRequest;
- (id)currentSearchString;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)stop;
- (void)getSuggestionsForSearchString:(id)fp8;
- (void)_cancelAndReleaseConnectionAndData;
- (id)init;
- (void)connectionDidFinishLoading:(id)fp8;
- (void)connection:(id)fp8 didFailWithError:(id)fp12;
- (void)connection:(id)fp8 didReceiveData:(id)fp12;
- (void)connection:(id)fp8 didReceiveResponse:(id)fp12;

@end

@interface SecurityInfo : _AITFireProbe
{
    NSURL *url;
    int urlSecurityAssessment;
    int urlSecurityProvider;
    BOOL hasWarnedUser;
}

- (void)setURLSecurityProvider:(int)fp8;
- (int)urlSecurityProvider;
- (void)setHasWarnedUser:(BOOL)fp8;
- (BOOL)hasWarnedUser;
- (BOOL)isKnownToBeUnsafe;
- (void)setURLSecurityAssessment:(int)fp8;
- (int)urlSecurityAssessment;
- (void)setAssessedURL:(id)fp8;
- (id)assessedURL;
- (id)description;
- (void)dealloc;

@end

@interface Settings : _AITFireProbe
{
}

+ (id)historyPath;
+ (id)configurableSearchEngineFallbackPath;
+ (id)configurableSearchEnginePath;
+ (id)cachesDirectoryPath;
+ (id)recentSearchPath;
+ (id)thumbnailCacheDirectoryPath;
+ (id)savedStatePath;
+ (id)settingsDirectoryPath;

@end

@interface SharedDataMigration : _AITFireProbe
{
}

+ (void)migrateWebPreferences;
+ (BOOL)migrateThumbnails;
+ (BOOL)migrateRecentSearches;
+ (void)migratePersistentStorageDefaults;
- (BOOL)_migrateCacheFileFromSubpath:(id)fp8 toSubpath:(id)fp12 ensureIsDirectory:(BOOL)fp16;
- (id)_userCachesDirectoryPath;

@end

@interface SheetControllerPanel : _AITFireProbe <BrowserPanel>
{
    SheetController *_sheetController;
}

- (id)sheetController;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)pausesPages;
- (int)panelState;
- (int)panelType;
- (void)dealloc;
- (id)initWithSheetController:(id)fp8;

@end

@interface SiteIconDownloader : _AITFireProbe
{
    unsigned int _bookmarkID;
    NSMutableArray *_URLs;
    NSURLConnection *_connection;
    NSMutableData *_data;
}

+ (void)setShouldContinueDownloadingReadingListIcons:(BOOL)fp8;
+ (BOOL)downloadIsPendingForBookmarkID:(unsigned int)fp8;
+ (void)cancelAllDownloads;
+ (void)downloadIconsForBrowserView:(id)fp8 forReadingListBookmarkID:(unsigned int)fp12;
+ (void)downloadFallbackIconsForURL:(id)fp8 forReadingListBookmarkID:(unsigned int)fp12;
- (unsigned int)bookmarkID;
- (void)_removeFromIconDownloadersAndScheduleNextDownloadIfNeeded;
- (void)cancel;
- (void)connectionDidFinishLoading:(id)fp8;
- (void)connection:(id)fp8 didFailWithError:(id)fp12;
- (void)connection:(id)fp8 didReceiveData:(id)fp12;
- (void)connection:(id)fp8 didReceiveResponse:(id)fp12;
- (void)connection:(id)fp8 didReceiveAuthenticationChallenge:(id)fp12;
- (void)_cancelConnectionAndFetchNextIcon;
- (void)_fetchNextIcon;
- (void)dealloc;
- (id)_initWithIconURLs:(id)fp8 readingListBookmarkID:(unsigned int)fp12;

@end

@interface TabBar : _AITFireProbe <UIGestureRecognizerDelegate>
{
    TabBarPieceView *_background;
    UIButton *_addTabButton;
    UILongPressGestureRecognizer *_addTabLongPressRecognizer;
    UIPanGestureRecognizer *_reorderRecognizer;
    struct CGPoint _reorderOrigin;
    struct CGPoint _reorderEffectiveTouchLocation;
    TabBarItem *_floatingItem;
    TabBarItem *_sinkingItem;
    BOOL _usesPrivateBrowsingStyle;
    NSMutableDictionary *_pieceImages;
    NSHashTable *_allPieceViews;
    UIImage *_activeTabBackgroundImage;
    float _activeTabBackgroundOffset;
    id <TabBarDelegate> _delegate;
    NSArray *_items;
    BOOL _shouldShowMoreTabsButton;
}

- (BOOL)usesPrivateBrowsingStyle;
- (void)setShouldShowMoreTabsButton:(BOOL)fp8;
- (BOOL)shouldShowMoreTabsButton;
- (id)items;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)dealloc;
- (void)_item:(id)fp8 didUpdateFromTitle:(id)fp12 toTitle:(id)fp16;
- (unsigned int)_maximumTruncationIndexForTitle:(id)fp8;
- (struct CGRect)moreTabsPopoverPresentationRect;
- (struct CGRect)addTabPopoverPresentationRect;
- (void)reorder:(id)fp8;
- (BOOL)gestureRecognizerShouldBegin:(id)fp8;
- (BOOL)gestureRecognizer:(id)fp8 shouldReceiveTouch:(id)fp12;
- (void)_finishReorderingAnimated:(BOOL)fp8;
- (void)_beginReorderingItem:(id)fp8;
- (void)touchesBegan:(id)fp8 withEvent:(id)fp12;
- (id)_itemForTouch:(id)fp8;
- (id)_itemAtLocation:(struct CGPoint)fp8;
- (void)setItems:(id)fp8 animated:(BOOL)fp12;
- (void)setItems:(id)fp8 animated:(BOOL)fp12 completion:(id)fp(null);
- (void)_prepareForNewItems:(id)fp8;
- (void)setItems:(id)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)setBounds:(struct CGRect)fp8;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)_layoutItems;
- (void)_layoutAddTabButton;
- (void)_layoutIndexes:(id)fp8 ofItems:(id)fp12;
- (unsigned int)_effectiveIndexForIndex:(unsigned int)fp8 ofItems:(id)fp12;
- (struct CGRect)_frameForItemAtIndex:(unsigned int)fp8;
- (unsigned int)itemCountThatFits;
- (void)_layoutItem:(id)fp8 inRect:(struct CGRect)fp12 withPreviousItem:(id)fp28 seenActiveItemYet:(BOOL)fp32;
- (void)_itemDidPressMoreTabsButton:(id)fp8;
- (void)_itemDidPressCloseButton:(id)fp8;
- (void)_addTabLongPressRecognized:(id)fp8;
- (void)_tabButtonPressed;
- (id)initWithFrame:(struct CGRect)fp8;
- (id)_allPieceViews;
- (id)rightEdgeOfType:(id)fp8;
- (id)leftEdgeOfType:(id)fp8;
- (id)backgroundOfType:(id)fp8;
- (void)setActiveTabBackgroundOffset:(float)fp8;
- (void)setActiveTabBackgroundImage:(id)fp8;
- (void)invalidateAllPieces;
- (void)_invalidateImageForPieceType:(id)fp8;
- (id)_imageForPieceType:(id)fp8 backgroundPiece:(BOOL)fp12;
- (id)_activeTabMaskImage;
- (id)_activeTabBezelImage;
- (float)activeTabBackgroundOffset;
- (id)activeTabBackgroundImage;

@end

@interface TabBarItem : _AITFireProbe
{
    TabBarItemView *_view;
    TabBar *_tabBar;
    NSString *_title;
    BOOL _active;
    int _securityLevel;
}

- (int)securityLevel;
- (BOOL)isActive;
- (id)title;
- (void)clearView;
- (void)setSecurityLevel:(int)fp8;
- (void)setActive:(BOOL)fp8;
- (void)setTitle:(id)fp8;
- (void)setTabBar:(id)fp8;
- (void)moreTabsButtonPressed;
- (void)closeButtonPressed;
- (BOOL)hasView;
- (id)view;
- (void)dealloc;

@end

@interface TabBarItemView : _AITFireProbe
{
    TabBarPieceView *_leftEdge;
    TabBarPieceView *_middle;
    TabBarPieceView *_rightEdge;
    UILabel *_titleLabel;
    NSString *_titleText;
    UIImageView *_lockView;
    TabBar *_tabBar;
    FloatingHighlightButton *_closeButton;
    FloatingHighlightButton *_moreTabsButton;
    BOOL _active;
    int _securityLevel;
    BOOL _showsLeftEdge;
    BOOL _showsRightEdge;
    BOOL _centersTitleInWindow;
    BOOL _showsMoreTabsButton;
}

+ (float)extraWidthForMoreTabsButton;
- (BOOL)showsMoreTabsButton;
- (id)moreTabsButton;
- (BOOL)centersTitleInWindow;
- (BOOL)showsRightEdge;
- (BOOL)showsLeftEdge;
- (int)securityLevel;
- (BOOL)isActive;
- (id)closeButton;
- (void)dealloc;
- (void)setSecurityLevel:(int)fp8;
- (void)setActive:(BOOL)fp8;
- (void)setShowsMoreTabsButton:(BOOL)fp8;
- (void)setCentersTitleInWindow:(BOOL)fp8;
- (void)setShowsRightEdge:(BOOL)fp8;
- (void)setShowsLeftEdge:(BOOL)fp8;
- (void)setTitleText:(id)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)setBounds:(struct CGRect)fp8;
- (id)hitTest:(struct CGPoint)fp8 withEvent:(id)fp16;
- (id)initWithTabBar:(id)fp8;
- (void)_layoutMoreTabsButton;
- (void)_layoutCloseButton;
- (void)_layoutLockView;
- (void)_layoutEdges;
- (struct CGRect)extendedFrame;
- (void)updateTitleTruncation;
- (void)_layoutTitleLabel;
- (struct CGRect)_titleBoundingBox;
- (struct CGRect)_contentRect;
- (id)_truncatedTitleWithFont:(id)fp8 desiredWidth:(float)fp12 truncatedSize:(struct CGSize *)fp16;

@end

@interface TabBarPieceView : _AITFireProbe
{
    TabBar *_tabBar;
    struct CGSize _desiredSize;
    BOOL _backgroundPiece;
    BOOL _animatingBackgroundOffset;
    NSString *_type;
}

- (id)type;
- (void)animateBackgroundFromOffset:(float)fp8 toOffset:(float)fp12;
- (struct CGSize)sizeThatFits:(struct CGSize)fp8;
- (void)setType:(id)fp8;
- (void)dealloc;
- (id)initWithType:(id)fp8 tabBar:(id)fp12;
- (id)initWithType:(id)fp8 tabBar:(id)fp12 backgroundPiece:(BOOL)fp16;
- (void)_updateContents;

@end

@interface TabButton : _AITFireProbe
{
    ThumbnailImageView *_thumbnailImageView;
    UIImageView *_thumbnailShadowView;
    UIButton *_closeButton;
    struct CGRect _closeButtonHitRect;
    BOOL _hasCloseButton;
    NSString *_urlString;
    struct CGPoint _closeButtonOffset;
    struct CGSize _thumbnailSize;
    id _target;
    SEL _action;
}

+ (id)_closeButtonPressedImage;
+ (id)_closeButtonImage;
- (id)snapshot;
- (void)setSnapshot:(id)fp8 animated:(BOOL)fp12;
- (BOOL)hasCloseButton;
- (void)setHasCloseButton:(BOOL)fp8;
- (void)insertThumbnailImageView;
- (id)thumbnailImageView;
- (id)hitTest:(struct CGPoint)fp8 withEvent:(id)fp16;
- (void)_thumbnailImagePressed;
- (void)setTarget:(id)fp8 action:(SEL)fp12;
- (id)closeButton;
- (void)setDimAlpha:(float)fp8;
- (struct CGSize)thumbnailSize;
- (void)setThumbnailSize:(struct CGSize)fp8;
- (void)setFrame:(struct CGRect)fp8;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;
- (void)_tile;

@end

@interface TabController : _AITFireProbe <RecentlyClosedTabViewControllerDelegate, RotatablePopoverControllerDelegate, TabExposeDelegate, TabBarDelegate, TabOverflowListControllerDelegate>
{
    NSTimer *_thumbnailUpdateTimer;
    RecentlyClosedTabViewController *_recentlyClosedTabController;
    BOOL _tabBarItemsFixed;
    NSMutableArray *_tabDocuments;
    TabDocument *_topOfRightRotor;
    struct _NSRange _visibleTabRange;
    TabDocument *_activeTabDocument;
    TabBar *_tabBar;
    BOOL _tabExposeButtonIndicatorExcludesBlankDocuments;
    PagedTabExposeView *_tabExposeView;
}

- (BOOL)tabExposeButtonIndicatorExcludesBlankDocuments;
- (id)tabDocuments;
- (id)tabBar;
- (id)activeTabDocument;
- (void)tabOverflowListController:(id)fp8 didSelectTabDocument:(id)fp12;
- (void)_presentOverflowListController;
- (void)_rotateDocumentIntoView:(id)fp8;
- (void)_moveLeftStackDocumentIntoRightRotor:(id)fp8;
- (void)_adjustOverflowForDocumentToBeRemoved:(id)fp8 willFocusPreviousDocument:(BOOL)fp12;
- (void)_adjustOverflowForInsertedDocument:(id)fp8;
- (BOOL)_isDocumentInLeftStack:(id)fp8;
- (id)_nextDocumentInRotorAfter:(id)fp8;
- (void)_adjustTopOfRightRotor;
- (void)_rotateRightRotorDocumentIntoView:(id)fp8;
- (BOOL)_isDocumentInRightRotor:(id)fp8;
- (BOOL)_isOverflowing;
- (id)tabExposeView;
- (void)setupTabExposeViewIfNeeded;
- (void)setTabExposeButtonIndicatorExcludesBlankDocuments:(BOOL)fp8;
- (void)updateTabExposeButtonIndicator;
- (void)tabExposeView:(id)fp8 didHideWithActiveTabDocument:(id)fp12;
- (void)tabExposeView:(id)fp8 closeTabDocument:(id)fp12;
- (void)tabExposeViewDidShow:(id)fp8;
- (void)tabExposeViewWillHide:(id)fp8;
- (void)tabExposeView:(id)fp8 willShowAboveView:(id)fp12;
- (void)tabExposeView:(id)fp8 activateTabDocument:(id)fp12;
- (BOOL)tabExposeViewCanAddTab:(id)fp8;
- (void)tabExposeViewAddTab:(id)fp8;
- (void)updateTabBarAnimated:(BOOL)fp8;
- (void)updateTabBarAnimated:(BOOL)fp8 completion:(id)fp(null);
- (void)updateVisibleTabs;
- (void)recentlyClosedTabViewController:(id)fp8 didSelectTabDocument:(id)fp12;
- (void)tabBar:(id)fp8 activateItem:(id)fp12;
- (void)tabBar:(id)fp8 closeItem:(id)fp12;
- (void)tabBar:(id)fp8 moveItem:(id)fp12 overItem:(id)fp16;
- (void)popoverControllerDidDismissPopover:(id)fp8;
- (void)popoverController:(id)fp8 willPresentAfterRotationToInterfaceOrientation:(int)fp12;
- (void)tabBarShowMoreTabs:(id)fp8;
- (void)tabBarAddTabLongPress:(id)fp8;
- (void)tabBarAddTab:(id)fp8;
- (BOOL)tabBar:(id)fp8 canCloseItem:(id)fp12;
- (BOOL)tabBar:(id)fp8 canMoveItem:(id)fp12;
- (BOOL)tabBarCanAddTab:(id)fp8;
- (id)_tabDocumentRepresentedByTabBarItem:(id)fp8;
- (void)_setTabBarItemsFixed:(BOOL)fp8;
- (BOOL)usesTabBar;
- (void)setUsesTabBar:(BOOL)fp8;
- (void)dealloc;
- (id)init;
- (void)openInitialBlankTabDocumentIfNeeded;
- (void)pausePagesWithEventsForActiveDocument:(BOOL)fp8;
- (void)resume;
- (void)suspendForEventsOnly:(BOOL)fp8;
- (id)tabDocumentForURL:(id)fp8;
- (id)tabDocumentForWebView:(id)fp8;
- (void)moveTabDocument:(id)fp8 overTabDocument:(id)fp12;
- (void)closeTabDocument:(id)fp8 animated:(BOOL)fp12;
- (BOOL)_shouldFocusPreviousDocumentWhenClosingDocument:(id)fp8;
- (BOOL)_createAndSwitchToNewBlankTabDocumentOpeningCaptiveLandingPageIfNecessary;
- (id)_openBlankTabDocument;
- (id)openTabDocumentFromTabDocument:(id)fp8 inBackground:(BOOL)fp12 animated:(BOOL)fp16;
- (void)_insertTabDocument:(id)fp8 afterTabDocument:(id)fp12 inBackground:(BOOL)fp16 animated:(BOOL)fp20;
- (void)_makeRoomForNewTabDocument:(id)fp8;
- (id)_oldestInactiveTabDocument;
- (unsigned int)maximumTabDocumentCount;
- (void)setActiveTabDocumentForSnapshotting:(id)fp8;
- (void)setActiveTabDocument:(id)fp8 animated:(BOOL)fp12;
- (void)_setActiveTabDocument:(id)fp8 animated:(BOOL)fp12 forSnapshotting:(BOOL)fp16;
- (void)setActiveTabDocument:(id)fp8;
- (BOOL)readStateWithURL:(id)fp8;
- (void)saveStateInBackground:(BOOL)fp8;
- (void)updateThumbnailsThatNeedImmediateUpdate;
- (void)removeStaleCachedTabThumbnails;
- (id)_tabWithUUID:(id)fp8;
- (void)setAutoUpdateThumbnails:(BOOL)fp8;
- (void)updateTabThumbnails;
- (void)_setThumbnailUpdateTimer:(id)fp8;
- (BOOL)updateNextDirtyTabThumbnail;
- (void)_delayedUpdateThumbnailForTabDocument:(id)fp8;
- (void)updateCurrentTabThumbnail;

@end

@interface TabDocumentWebBrowserView : _AITFireProbe
{
}

- (struct CGSize)contentSizeForScrollView:(id)fp8;
- (float)heightToKeepVisible;
- (float)minimumVerticalContentOffset;

@end

@interface TabDocumentWebPDFViewHandler : _AITFireProbe
{
}

- (struct CGSize)contentSizeForScrollView:(id)fp8;
- (float)heightToKeepVisible;
- (float)minimumVerticalContentOffset;

@end

@interface TabDocument : _AITFireProbe <ReaderControllerDelegate, WebUIBrowserLoadingControllerDelegate, StoreBannerDelegate>
{
    int _retainCount;
    id <TabDocumentDelegate> _delegate;
    NSString *_uuid;
    UIWebBrowserView *_browserView;
    QuickLookDocumentController *_quickLookDocumentController;
    BOOL _quickLookDocumentCheckCompleted;
    UIWebPDFViewHandler *_pdfViewHandler;
    float _zoomScale;
    CALayer *_holdingLayer;
    TabButton *_tabButton;
    TabBarItem *_tabBarItem;
    WebUIBrowserLoadingController *_loadingController;
    NSURL *_responseURL;
    int _downloadingFileType;
    WebDownload *_fileDownload;
    NSString *_fileDownloadPath;
    QuickLookDocument *_quickLookDocument;
    NSString *_startURLString;
    NSURLRequest *_failedRequest;
    BOOL _reloadAfterResume;
    BOOL _reloadingFailedRequest;
    NSString *_EVOrganizationName;
    NSURL *_originatingURL;
    NSURL *_tabReuseURL;
    struct CGPoint _scrollPoint;
    BOOL _omittedFromTabExposeButtonCount;
    BOOL _isBlankDocument;
    BOOL _isPopup;
    int _thumbnailStatus;
    BOOL _autoUpdatesThumbnail;
    struct CGRect _screenShotFrame;
    BOOL _suspended;
    BOOL _hibernated;
    BOOL _allowURLAsTitle;
    BOOL _loadWasUserDriven;
    BOOL _watchingProgressForStall;
    NSTimer *_progressStalledTimer;
    BOOL _progressStalled;
    BOOL _progressCanStall;
    BOOL _waitingForImportantSubresources;
    long long _downloadBytesExpected;
    unsigned int _downloadBytesLoaded;
    int _resourcesCurrentlyLoadingCount;
    NSCountedSet *_subresourceHostsCurrentlyLoading;
    NSMutableSet *_knownResponsiveSubresourceHosts;
    BOOL _isActive;
    BOOL _isPagePaused;
    BOOL _isClosed;
    UIColor *_bodyBackgroundColor;
    double _lastViewedTime;
    NSMutableArray *_alerts;
    NSDictionary *_backForwardListDictionary;
    PageLoadStatistics *_stats;
    BOOL _isWaitingForLastDraw;
    struct __CFRunLoopObserver *_mainRunLoopDrawObserver;
    struct {
        int version;
        void *info;
        void *retain;
        void *release;
        void *copyDescription;
    } _mainRunLoopDrawObserverContext;
    void *_internal;
    BOOL _showingSecurityWarningPage;
    BOOL _loadingSecurityWarningPage;
    SecurityInfo *_provisionalSecurityInfo;
    ReaderContext *_readerContext;
    BrowserReaderView *_browserReaderView;
    BOOL _hasDoneReaderAvailabilityDetection;
    NSTimer *_readerAvailabilityDetectionTimer;
    BOOL _keepReadingListBookmarkIDForNextCommit;
    unsigned int _readingListBookmarkID;
    BOOL _userHasManipulatedVisibleRegion;
    BOOL _wasOpenedFromLink;
    BOOL _wasOpenedFromHistory;
    unsigned int _downloadBackgroundTaskIdentifier;
    unsigned int _resourceLoadBackgroundTaskIdentifier;
    double _pageLoadStartTime;
    double _firstVisualLayoutTime;
    double _pageLoadStopTime;
    double _lastLoadCommittedTime;
    BOOL _loadWasStartedByUserClick;
    BOOL _goingBackAfterQuickStop;
    BOOL _clearVisitedLinkStyleAfterQuickStop;
    BOOL _isShowingReader;
    BOOL _shouldRestoreReader;
    int _readerViewTopScrollOffset;
    int _externalAppRedirectState;
    NSDictionary *_initialArticleScrollDictionaryForCloudTab;
    BOOL _usesMinimalTiling;
    StoreBanner *_storeBanner;
    UIImage *siteCustomIcon;
    BOOL siteCustomIconPrecomposed;
    BOOL showingErrorPage;
}

- (void)setShowingErrorPage:(BOOL)fp8;
- (BOOL)showingErrorPage;
- (void)setExternalAppRedirectState:(int)fp8;
- (int)externalAppRedirectState;
- (void)setReadingListBookmarkID:(unsigned int)fp8;
- (unsigned int)readingListBookmarkID;
- (void)setSiteCustomIconPrecomposed:(BOOL)fp8;
- (BOOL)siteCustomIconPrecomposed;
- (void)setSiteCustomIcon:(id)fp8;
- (id)siteCustomIcon;
- (void)setStoreBanner:(id)fp8;
- (id)storeBanner;
- (BOOL)usesMinimalTiling;
- (void)setReaderViewTopScrollOffset:(int)fp8;
- (int)readerViewTopScrollOffset;
- (void)setShouldRestoreReader:(BOOL)fp8;
- (BOOL)shouldRestoreReader;
- (void)setIsShowingReader:(BOOL)fp8;
- (BOOL)isShowingReader;
- (id)browserReaderView;
- (void)setOmittedFromTabExposeButtonCount:(BOOL)fp8;
- (BOOL)isOmittedFromTabExposeButtonCount;
- (void)setQuickLookDocumentController:(id)fp8;
- (id)quickLookDocumentController;
- (void)setOriginatingURL:(id)fp8;
- (id)originatingURL;
- (void)setWasOpenedFromLink:(BOOL)fp8;
- (BOOL)wasOpenedFromLink;
- (id)holdingLayer;
- (void)setQuickLookDocument:(id)fp8;
- (void)setFileDownloadPath:(id)fp8;
- (id)fileDownloadPath;
- (void)setFileDownload:(id)fp8;
- (id)fileDownload;
- (id).cxx_construct;
- (void)shouldPinStoreBanner:(BOOL)fp8;
- (void)dismissStoreBanner;
- (BOOL)supportsFindOnPage;
- (void)setClosed:(BOOL)fp8;
- (BOOL)isClosed;
- (void)setUserHasManipulatedVisibleRegion:(BOOL)fp8;
- (void)setLastViewedTime:(double)fp8;
- (double)lastViewedTime;
- (void)finishSimulatedClick;
- (void)beginSimulatedClickForURL:(id)fp8;
- (BOOL)isSimulatingClick;
- (void)download:(id)fp8 didFailWithError:(id)fp12;
- (void)downloadDidFinish:(id)fp8;
- (void)_showProfileInstallAlert;
- (void)download:(id)fp8 didReceiveResponse:(id)fp12;
- (void)download:(id)fp8 didReceiveDataOfLength:(unsigned int)fp12;
- (void)download:(id)fp8 decideDestinationWithSuggestedFilename:(id)fp12;
- (void)downloadDidBegin:(id)fp8;
- (void)_clearFileDownloadState;
- (BOOL)isImportantDocument;
- (void)endResourceLoadBackgroundTask;
- (void)beginResourceLoadBackgroundTask;
- (void)endDownloadBackgroundTask;
- (void)beginDownloadBackgroundTask:(id)fp8;
- (void)clearSearchEngineScriptObjects:(id)fp8;
- (void)webView:(id)fp8 didClearWindowObject:(id)fp12 forFrame:(id)fp16;
- (BOOL)webView:(id)fp8 shouldChangeSelectedDOMRange:(id)fp12 toDOMRange:(id)fp16 affinity:(int)fp20 stillSelecting:(BOOL)fp24;
- (void)webView:(id)fp8 unableToImplementPolicyWithError:(id)fp12 frame:(id)fp16;
- (void)webView:(id)fp8 decidePolicyForMIMEType:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (void)_showGenericDownloadAlert;
- (void)webView:(id)fp8 decidePolicyForNewWindowAction:(id)fp12 request:(id)fp16 newFrameName:(id)fp20 decisionListener:(id)fp24;
- (void)webView:(id)fp8 decidePolicyForNavigationAction:(id)fp12 request:(id)fp16 frame:(id)fp20 decisionListener:(id)fp24;
- (id)resultOfLoadingURL:(id)fp8;
- (id)resultOfLoadingRequest:(id)fp8 inFrame:(id)fp12;
- (void)_decidePolicyForAction:(id)fp8 request:(id)fp12 frame:(id)fp16 newFrameName:(id)fp20 decisionListener:(id)fp24;
- (id)_readingListArchiveNextPageLinkForRequest:(id)fp8 webFrame:(id)fp12;
- (void)_redirectToExternalNavigationResult:(id)fp8 fromOriginalURL:(id)fp12;
- (BOOL)_shouldPromptUserForExternalNavigationResult:(id)fp8;
- (void)_queueAlertForRedirectToExternalNavigationResult:(id)fp8 fromOriginalURL:(id)fp12;
- (void)_addInvalidURLAlert;
- (void)_addNoFeedAppSupportAlert;
- (BOOL)_shouldAskAboutInsecureFormSubmissionForAction:(id)fp8 andURL:(id)fp12;
- (void)_didRedirectToAnotherApp:(id)fp8 userCancelled:(BOOL)fp12;
- (void)_ignorePolicyListener:(id)fp8;
- (void)webView:(id)fp8 resource:(id)fp12 didCancelAuthenticationChallenge:(id)fp16 fromDataSource:(id)fp20;
- (void)webView:(id)fp8 resource:(id)fp12 didReceiveAuthenticationChallenge:(id)fp16 fromDataSource:(id)fp20;
- (BOOL)webView:(id)fp8 resource:(id)fp12 canAuthenticateAgainstProtectionSpace:(id)fp16 forDataSource:(id)fp20;
- (id)webThreadWebView:(id)fp8 resource:(id)fp12 willSendRequest:(id)fp16 redirectResponse:(id)fp20 fromDataSource:(id)fp24;
- (id)webThreadWebView:(id)fp8 identifierForInitialRequest:(id)fp12 fromDataSource:(id)fp16;
- (void)webThreadWebView:(id)fp8 resource:(id)fp12 didFailLoadingWithError:(id)fp16 fromDataSource:(id)fp20;
- (void)webThreadWebView:(id)fp8 resource:(id)fp12 didFinishLoadingFromDataSource:(id)fp16;
- (void)_decrementCurrentlyLoadingResourceCount;
- (void)_incrementCurrentlyLoadingResourceCount;
- (void)webView:(id)fp8 didChangeLocationWithinPageForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailLoadWithError:(id)fp12 forFrame:(id)fp16;
- (void)webView:(id)fp8 didFinishLoadForFrame:(id)fp12;
- (double)lastPageLoadTime;
- (double)lastPageVisualLayoutTime;
- (void)_notifyPageLoadDidFinishIfNecessary;
- (void)webView:(id)fp8 didFirstVisuallyNonEmptyLayoutInFrame:(id)fp12;
- (void)webThreadWebViewDidLayout:(id)fp8;
- (void)showStoreBannerIfNecessary;
- (void)_watchProgressForStall;
- (void)_progressDidStall;
- (void)_webThreadUpdateProgressCanStall;
- (void)_resetProgressStalled;
- (void)_cancelProgressStalledTimer;
- (BOOL)progressStalled;
- (void)webView:(id)fp8 didCommitLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didFailProvisionalLoadWithError:(id)fp12 forFrame:(id)fp16;
- (id)_webClip;
- (void)_createPageLoadStatistics;
- (void)restoreStateFromHistoryItem:(id)fp8 forWebView:(id)fp12;
- (void)saveStateToHistoryItem:(id)fp8 forWebView:(id)fp12;
- (void)updateViewHierarchyForDocumentViewNewLoad:(id)fp8;
- (void)updateViewHierarchyForDocumentViewLoadComplete:(id)fp8;
- (void)updateViewHierarchyForFirstNonEmptyLayoutInFrame:(id)fp8;
- (void)webViewDidDrawDocument;
- (void)_PPTCheckDidDraw;
- (void)_PPTDocumentFinishedLoadingNotification:(BOOL)fp8;
- (void)_updatePageLoadStatistics;
- (void)webView:(id)fp8 didReceiveServerRedirectForProvisionalLoadForFrame:(id)fp12;
- (void)webView:(id)fp8 didStartProvisionalLoadForFrame:(id)fp12;
- (id)EVOrganizationName;
- (void)browserLoadingControllerDidUpdateSecurity:(id)fp8;
- (BOOL)isSecure;
- (int)securityLevel;
- (id)forwardListControllerWithLimit:(int)fp8;
- (id)backListControllerWithLimit:(int)fp8;
- (void)browserLoadingControllerDidUpdateBackForward:(id)fp8;
- (BOOL)canGoForward;
- (BOOL)canGoBack;
- (BOOL)currentPageLoadedFromReadingList;
- (BOOL)loadWasUserDriven;
- (void)clearBackForwardCache;
- (void)destroyAllPlugIns;
- (BOOL)pluginsAreRunning;
- (void)browserLoadingControllerWillStartUserDrivenLoad:(id)fp8;
- (void)reload;
- (void)goForward;
- (void)goBack;
- (void)stopLoading;
- (void)loadCloudTab:(id)fp8;
- (void)loadUserTypedAddress:(id)fp8;
- (void)loadBookmarkURL:(id)fp8 updatingReadingListBookmarkWithBookmarkID:(unsigned int)fp12;
- (void)loadURL:(id)fp8 userDriven:(BOOL)fp12;
- (void)loadWebClip:(id)fp8 userDriven:(BOOL)fp12;
- (void)loadRequest:(id)fp8 userDriven:(BOOL)fp12;
- (void)browserLoadingController:(id)fp8 willLoadRequest:(id)fp12 userDriven:(BOOL)fp16;
- (BOOL)browserLoadingControllerShouldShowProvisionalURLs:(id)fp8;
- (id)titleForNewBookmark;
- (id)title;
- (id)quickLookDocument;
- (BOOL)hasQuickLookContent;
- (BOOL)isPDFDocument;
- (BOOL)isLoading;
- (void)setLoading;
- (void)browserLoadingController:(id)fp8 didFinishLoadingWithError:(id)fp12 dataSource:(id)fp16;
- (void)browserLoadingControllerDidStartLoading:(id)fp8;
- (void)_updateTabThumbnailForDoneLoading;
- (id)UUID;
- (void)setUUID:(id)fp8;
- (void)browserLoadingControllerDidUpdateURL:(id)fp8;
- (void)clearTabReuseURL;
- (void)setTabReuseURL:(id)fp8;
- (id)tabReuseURL;
- (id)URLForSharing;
- (id)URL;
- (void)_setResponseURL:(id)fp8;
- (id)browserLoadingController:(id)fp8 userVisibleStringForURL:(id)fp12;
- (void)browserLoadingControllerDidUpdateURLString:(id)fp8;
- (id)URLStringWithoutScheme;
- (id)URLString;
- (void)setScrollPoint:(struct CGPoint)fp8;
- (struct CGPoint)scrollPoint;
- (void)_progressChanged:(id)fp8;
- (void)browserLoadingControllerDidUpdateEstimatedProgress:(id)fp8;
- (float)estimatedProgress;
- (void)updateBackgroundColor:(struct CGColor *)fp8;
- (id)bodyBackgroundColor;
- (BOOL)isPopup;
- (void)setPopup:(BOOL)fp8;
- (struct CGRect)screenShotFrame;
- (void)setScreenShotFrame:(struct CGRect)fp8;
- (void)willClose;
- (void)_closeTabDocumentAnimated:(BOOL)fp8;
- (void)setActive:(BOOL)fp8;
- (void)becameActive;
- (void)setDelegate:(id)fp8;
- (id)tabBarItem;
- (id)tabButton;
- (id)frontView;
- (void)setZoomScale:(float)fp8;
- (float)zoomScale;
- (id)pdfHandler;
- (id)pdfView;
- (id)browserView;
- (int)thumbnailStatus;
- (BOOL)needsThumbnailUpdate;
- (void)setThumbnailNeedsRedrawForReader;
- (void)setSuspendedWhileActiveTab;
- (void)setNeedsNewThumbnail;
- (BOOL)isBlankDocument;
- (void)setBlankDocument:(BOOL)fp8;
- (void)setUsesMinimalTiling:(BOOL)fp8;
- (void)_updateTilingArea;
- (id)cachedSnapshot;
- (void)setAutoUpdatesThumbnail:(BOOL)fp8;
- (BOOL)autoUpdatesThumbnail;
- (void)processUpdatedSnapshot:(id)fp8 animated:(BOOL)fp12;
- (void)updateTabThumbnail;
- (void)updateTabThumbnailAnimated:(BOOL)fp8 synchronous:(BOOL)fp12;
- (void)_saveBackForwardListToDictionary;
- (void)restoreBackForwardListFromDictionary;
- (void)_restoreTransientReadingListDataToWebHistoryItem:(id)fp8;
- (void)goToHistoryItem:(id)fp8;
- (void)goToCurrentHistoryItem;
- (id)backForwardListDictionary;
- (void)setBackForwardListDictionary:(id)fp8;
- (void)removeNonVisibleTiles;
- (void)setPagePaused:(BOOL)fp8 withEvents:(BOOL)fp12;
- (void)resume;
- (void)suspendForEventsOnly:(BOOL)fp8;
- (BOOL)isHibernated;
- (void)unhibernate;
- (void)hibernate;
- (id)initWithTitle:(id)fp8 URL:(id)fp12 UUID:(id)fp16 hibernated:(BOOL)fp20 readingListBookmarkID:(unsigned int)fp24;
- (void)_closeButtonPressed;
- (void)browserLoadingControllerDidUpdateTitle:(id)fp8;
- (void)_updateTabBarTitle;
- (id)tabBarTitle;
- (id)rawTitle;
- (id)_titleIncludeLoading:(BOOL)fp8 allowURLStringFallback:(BOOL)fp12;
- (void)dealloc;
- (void)_prepareWebViewRelease;
- (void)_createDocumentView;
- (BOOL)consoleMessagesEnabled;
- (void)didReadDefaults;
- (void)_updateTextSize;
- (BOOL)_isAnyTestRunning;
- (BOOL)_isDeallocating;
- (BOOL)_tryRetain;
- (unsigned int)retainCount;
- (oneway void)release;
- (id)retain;
- (id)init;
- (void)reloadAfterError;
- (void)clearFailedRequest;
- (void)handlePolicyError:(id)fp8 forFrame:(id)fp12;
- (void)handleFrameLoadError:(id)fp8 forDataSource:(id)fp12;
- (id)_titleForError:(id)fp8;
- (void)_setFailedRequest:(id)fp8;
- (void)_reachabilityChanged:(id)fp8;
- (BOOL)handleCertificateError:(id)fp8 forDataSource:(id)fp12;
- (void)showErrorPageWithTitle:(id)fp8 bodyText:(id)fp12 forError:(id)fp16;
- (void)addAlertWithTitle:(id)fp8 bodyText:(id)fp12;
- (void)addFormAlertWithTitle:(id)fp8 listener:(id)fp12;
- (id)alert;
- (void)performAction:(int)fp8 forAlert:(id)fp12;
- (void)_continueWithoutCredentialsUsingAlertContext:(id)fp8;
- (void)_continueAfterCertificateAlertWithContext:(id)fp8;
- (void)_loadRequest:(id)fp8 inFrame:(id)fp12;
- (void)addAlert:(id)fp8;
- (id)_genericMessageForError:(id)fp8 dataSource:(id)fp12;
- (id)_specializedMessageForError:(id)fp8 dataSource:(id)fp12;
- (id)_failingURLFromError:(id)fp8 andDataSource:(id)fp12;
- (void)_fraudulentWebsiteCheckCompletedForURL:(id)fp8 withAssessment:(int)fp12 fromProvider:(int)fp16;
- (void)checkForFraudulentWebsitesWithURL:(id)fp8;
- (void)cancelCheckForFraudulentWebsites;
- (void)_warnAboutUnsafeSiteWithSecurityInfo:(id)fp8;
- (void)setUpSecurityWarningPageController;
- (void)securityWarningPageClosePageButtonPressed;
- (void)securityWarningPageBackButtonPressed;
- (void)securityWarningPageIgnoreWarningButtonPressed;
- (void)securityWarningPageLoaded;
- (void)updateSecurityWarningPageWithSecurityInfo:(id)fp8;
- (void)hideSecurityWarningPage;
- (void)setLoadingSecurityWarningPage:(BOOL)fp8;
- (BOOL)loadingSecurityWarningPage;
- (BOOL)showingSecurityWarningPage;
- (void)showSecurityWarningPageWithSecurityInfo:(id)fp8;
- (void)commitProvisionalSecurityInfo;
- (void)setProvisionalSecurityInfo:(id)fp8;
- (id)provisionalSecurityInfo;
- (void)setUpSecurityWarningPage;
- (id)securityWarningPagePath;
- (void)_continueLoadingSite;
- (BOOL)safeBrowsingObserverIsValid;
- (void)invalidateSafeBrowsingObserver;
- (void)initializeSafeBrowsingObserver;
- (void)clearReaderScrollInformation;
- (void)updateReaderView;
- (void)willCloseReaderWebView:(id)fp8;
- (id)readerPageArchiveURL;
- (void)didClickLinkInReaderWithRequest:(id)fp8;
- (void)didChangeNextPageLoadingState:(BOOL)fp8;
- (void)didInitReaderJSController:(struct ReaderJSController *)fp8;
- (void)didDeactivateReaderWithMode:(int)fp8;
- (void)didActivateReader;
- (void)willActivateReader;
- (BOOL)networkIsReachable;
- (int)readerOperationMode;
- (BOOL)isShowingReadingListArchive;
- (BOOL)shouldShowReaderOnActive;
- (id)readerContext;
- (void)detectReaderAvailabilitySoon;
- (BOOL)isReaderAvailable;
- (BOOL)hasDoneReaderDetection;
- (void)clearReaderContext;
- (void)_clearBrowserReaderView;
- (void)createBrowserReaderViewIfNeeded;
- (void)_detectReaderAvailabilityNow;
- (void)_detectReaderAvailabilityOnWebThread;
- (void)_didDetectReaderAvailability:(BOOL)fp8;
- (void)_cancelReaderAvailabilityDetectionTimer;

@end

@interface TabNavigationResult : _AITFireProbe
{
    int _type;
    NSURL *_URL;
    LSApplicationProxy *_externalApplication;
}

+ (id)resultWithRedirectToExternalURL:(id)fp8;
+ (id)resultOfType:(int)fp8 withURL:(id)fp12;
- (id)externalApplication;
- (id)URL;
- (int)type;
- (id)_initWithType:(int)fp8 URL:(id)fp12 externalApplication:(id)fp16;
- (void)dealloc;

@end

@interface TabSnapshot : _AITFireProbe
{
    struct CGImage *_image;
}

- (struct CGImage *)image;
- (void)dealloc;
- (id)initWithImage:(struct CGImage *)fp8;

@end

@interface TabSnapshotContext : _AITFireProbe
{
    BOOL _shouldRestoreBackgroundColor;
    UIView *_frontView;
    UIColor *_oldBackgroundColor;
    TabDocument *_activeTabDocumentBeforeTakingSnapshot;
    TabDocument *_tabDocumentToSnapshot;
    BOOL _activeTabDocumentWasChangedDuringSnapshot;
    struct CGRect _snapshotRect;
    float _contentsScale;
    BOOL _shouldAnimateUpdate;
}

- (void)setTabDocumentToSnapshot:(id)fp8;
- (id)tabDocumentToSnapshot;
- (void)setFrontView:(id)fp8;
- (id)frontView;
- (void)setShouldAnimateUpdate:(BOOL)fp8;
- (BOOL)shouldAnimateUpdate;
- (void)setContentsScale:(float)fp8;
- (float)contentsScale;
- (void)setSnapshotRect:(struct CGRect)fp8;
- (struct CGRect)snapshotRect;
- (id)activeTabDocumentBeforeTakingSnapshot;
- (void)setActiveTabDocumentBeforeTakingSnapshot:(id)fp8;
- (BOOL)activeTabDocumentWasChangedDuringSnapshot;
- (void)setActiveTabDocumentWasChangedDuringSnapshot:(BOOL)fp8;
- (id)oldBackgroundColor;
- (void)setOldBackgroundColor:(id)fp8;
- (BOOL)shouldRestoreBackgroundColor;
- (void)setShouldRestoreBackgroundColor:(BOOL)fp8;
- (void)dealloc;

@end

@interface TabToolbarButton : _AITFireProbe
{
    struct CGRect _hitRect;
    BOOL _usesPrivateBrowsingStyle;
    BOOL _usesSmallVersion;
    unsigned int _tabCount;
}

- (unsigned int)tabCount;
- (BOOL)usesSmallVersion;
- (void)setTabCount:(unsigned int)fp8;
- (void)setUsesSmallVersion:(BOOL)fp8;
- (BOOL)pointInside:(struct CGPoint)fp8 withEvent:(id)fp16;
- (struct CGRect)_buttonBarHitRect;
- (void)_setButtonBarHitRect:(struct CGRect)fp8;
- (void)drawRect:(struct CGRect)fp8;

@end

@interface TestProcessor : _AITFireProbe
{
    NSTimer *_actionTimer;
    int _actionCount;
    NSString *_testName;
    ApplicationTesting *_applicationTesting;
    PageLoadTestRunner *_testRunner;
    BOOL _running;
    BOOL _shouldShowRenderTime;
    BOOL _shouldShowRenderFps;
}

- (void)setShouldShowRenderFps:(BOOL)fp8;
- (void)setShouldShowRenderTime:(BOOL)fp8;
- (BOOL)performActionForTimer;
- (void)_handleActionTimer;
- (void)pageLoadTestRunnerFinishedPageLoad:(id)fp8;
- (void)pageLoadTestRunnerFinishedTest:(id)fp8;
- (void)pageLoadTestRunnerStartedTest:(id)fp8;
- (void)dealloc;
- (id)initWithTestName:(id)fp8 applicationTesting:(id)fp12;
- (id)init;

@end

@interface ThumbnailImageView : _AITFireProbe
{
    TabSnapshot *_snapshot;
    BOOL _shouldAnimateContentsChange;
}

- (id)snapshot;
- (void)setSnapshot:(id)fp8 animated:(BOOL)fp12;
- (id)actionForLayer:(id)fp8 forKey:(id)fp12;
- (void)layoutSubviews;
- (struct CGRect)_scaledWebPageSnapshotRect;
- (void)dealloc;

@end

@interface URLCompletionItem : _AITFireProbe
{
    NSString *title;
    NSString *address;
    float weight;
}

- (void)setWeight:(float)fp8;
- (float)weight;
- (void)setAddress:(id)fp8;
- (id)address;
- (void)setTitle:(id)fp8;
- (id)title;
- (id)description;
- (void)dealloc;
- (id)initWithAddress:(id)fp8 title:(id)fp12 weight:(float)fp16;

@end

@interface URLCompletionList : _AITFireProbe
{
    WebBookmarkCollection *_collection;
    NSMutableArray *_completionList;
    NSMutableDictionary *_completionsByAddress;
    unsigned int _maxResults;
    TIWordTokenizer *_titleTokenizer;
    NSObject<URLCompletionListDelegate> *_delegate;
    NSString *_currentPrefix;
    BOOL _prefixWasModified;
    struct _opaque_pthread_mutex_t _prefixMutex;
    struct _opaque_pthread_cond_t _prefixWasModifiedCondition;
}

- (id)completionAtIndex:(unsigned int)fp8;
- (unsigned int)completionCount;
- (void)updatePrefix:(id)fp8;
- (void)startGetPrefixLoop;
- (void)_getPrefixLoop;
- (void)_reportDidFinishForPrefix:(id)fp8;
- (void)_doUpdateForPrefix:(id)fp8;
- (BOOL)_string:(id)fp8 startsWordInString:(id)fp12;
- (void)_addBaseAddressToResultsUnlessExists:(id)fp8;
- (BOOL)_shouldMakeBaseURLForUserTypedString:(id)fp8;
- (void)_addHistoryItem:(id)fp8 withAddress:(id)fp12 title:(id)fp16 matchLocation:(int)fp20 isBookmark:(BOOL)fp24;
- (void)_insertItemIntoSortedCompletionList:(id)fp8;
- (float)_weightForHistoryItem:(id)fp8 withAddress:(id)fp12 matchLocation:(int)fp16 isBookmark:(BOOL)fp20;
- (void)setDelegate:(id)fp8;
- (void)dealloc;
- (id)initWithBookmarkCollection:(id)fp8 maxResults:(unsigned int)fp12;

@end

@interface WebClipTableViewCellLayoutManager : _AITFireProbe
{
}

- (id)editableTextFieldForCell:(id)fp8;
- (id)detailTextLabelForCell:(id)fp8;
- (id)textLabelForCell:(id)fp8;
- (void)layoutSubviewsOfCell:(id)fp8;
- (struct CGRect)contentEndingRectForCell:(id)fp8 forNewEditingState:(BOOL)fp12;
- (struct CGRect)backgroundEndingRectForCell:(id)fp8 forNewEditingState:(BOOL)fp12;

@end

@interface WebClipViewControllerRootView : _AITFireProbe
{
}

- (void)layoutSubviews;

@end

@interface WebClipViewController : _AITFireProbe <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
{
    UITableView *_tableView;
    UITableViewCell *_tableViewCell;
    UILabel *_infoLabel;
    UIView *_infoLabelContainer;
    BOOL _suspendAfterDismiss;
    UIWebClip *_webClip;
    NSObject<WebClipViewControllerDelegate> *_delegate;
    BOOL _delegateNotifiedOfResult;
}

- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setWebClip:(id)fp8;
- (id)webClip;
- (void)dealloc;
- (struct CGSize)contentSizeForViewInPopoverView;
- (BOOL)shouldShowButtonBar;
- (void)_textFieldChanged;
- (BOOL)textFieldShouldReturn:(id)fp8;
- (BOOL)_canAddWebClip;
- (void)_add;
- (void)_cancel;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (void)willAnimateRotationToInterfaceOrientation:(int)fp8 duration:(double)fp12;
- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (void)updateUIAnimated:(BOOL)fp8;
- (void)layoutSubviews;
- (float)tableViewTopMargin;
- (void)loadView;
- (id)init;

@end

@interface ZoomTestProcessor : TestProcessor
{
}

- (BOOL)performActionForTimer;

@end

@interface TabOverflowListController : _AITFireProbe
{
    NSArray *_tabDocuments;
    TabDocument *_selectedDocument;
    id <TabOverflowListControllerDelegate> _delegate;
}

- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (struct CGSize)contentSizeForViewInPopover;
- (void)dealloc;
- (id)initWithTabDocuments:(id)fp8 selectedDocument:(id)fp12 delegate:(id)fp16;

@end

@interface AddBookmarkUIActivity : _AITFireProbe <AddBookmarkNavigationControllerDelegate>
{
    AddBookmarkNavigationController *_bookmarkNavController;
}

- (void)addBookmarkNavController:(id)fp8 didFinishWithResult:(BOOL)fp12;
- (void)activityDidFinish:(BOOL)fp8;
- (id)_embeddedActivityViewController;
- (id)activityViewController;
- (void)prepareWithActivityItems:(id)fp8;
- (BOOL)canPerformWithActivityItems:(id)fp8;
- (id)activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)dealloc;

@end

@interface AddToHomeScreenUIActivity : _AITFireProbe <WebClipDelegate, WebClipViewControllerDelegate>
{
    UINavigationController *_wrappingNavigationController;
    WebClipViewController *_webClipViewController;
    UIWebClip *_webClip;
    UIImage *_defaultImage;
    UIImage *_image;
    BOOL _waitingForSnapshot;
}

- (void)_updateImageFromActiveTabDocument;
- (void)_setImage:(id)fp8 isPrecomposed:(BOOL)fp12;
- (void)_createWebClip;
- (void)_notifyUIActivityViewControllerWebClipIconChanged;
- (void)webClip:(id)fp8 startupLandscapeImageRequestDidFinishWithImage:(id)fp12;
- (void)webClip:(id)fp8 startupImageRequestDidFinishWithImage:(id)fp12;
- (void)webClip:(id)fp8 iconRequestDidFinishWithImage:(id)fp12 precomposed:(BOOL)fp16;
- (void)webClipViewController:(id)fp8 didFinishWithResult:(BOOL)fp12;
- (BOOL)_canAdjustOrder;
- (void)activityDidFinish:(BOOL)fp8;
- (id)_embeddedActivityViewController;
- (id)activityViewController;
- (void)prepareWithActivityItems:(id)fp8;
- (BOOL)canPerformWithActivityItems:(id)fp8;
- (id)_beforeActivity;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)dealloc;
- (id)init;

@end

@interface AddToReadingListUIActivity : _AITFireProbe
{
}

- (void)performActivity;
- (BOOL)canPerformWithActivityItems:(id)fp8;
- (id)activityImage;
- (id)activityTitle;
- (id)activityType;

@end

@interface StoreBanner : _AITFireProbe <SKProductPageViewControllerDelegate>
{
    SKProductPageViewController *_productViewController;
    UIImageView *_bottomShadowView;
    NSNumber *_productID;
    NSString *_affiliateData;
    id <StoreBannerDelegate> _delegate;
    BOOL _isPinnedToTop;
}

+ (void)storeBannerForMetaTagInDocument:(id)fp8 delegate:(id)fp12 completion:(id)fp(null);
+ (id)_valueFromKeyValueString:(id)fp8;
- (void)setIsPinnedToTop:(BOOL)fp8;
- (BOOL)isPinnedToTop;
- (void)productPage:(id)fp8 didFinishPurchase:(id)fp12 withError:(id)fp16;
- (void)productPage:(id)fp8 willMakePurchases:(id)fp12;
- (void)productPage:(id)fp8 didFailLoadWithError:(id)fp12;
- (void)productPage:(id)fp8 didFinishWithResult:(int)fp12;
- (void)dealloc;
- (void)_setBlockedByUser;
- (id)snapshotImageView;
- (void)setFrame:(struct CGRect)fp8;
- (id)initWithFrame:(struct CGRect)fp8 forProductID:(id)fp24 affiliateData:(id)fp28 applicationLaunchArgument:(id)fp32 delegate:(id)fp36;

@end

@interface StoreBannerTracker : _AITFireProbe
{
    NSMutableDictionary *_blockedProducts;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)sharedTracker;
- (void)blockProductBanner:(id)fp8;
- (void)isProductBannerBlocked:(id)fp8 completion:(id)fp(null);
- (void)clear;
- (void)save;
- (void)load;
- (id)filePath;
- (void)dealloc;
- (id)init;

@end

@interface EmptyCollectionLabel : _AITFireProbe
{
    NSString *_text;
    struct __CTFramesetter *_framesetter;
    struct CGSize _textSizePortrait;
    struct CGSize _textSizeLandscape;
    UIImage *_replacementImage;
    unsigned int _replacementLocation;
}

- (void)dealloc;
- (void)drawRect:(struct CGRect)fp8;
- (struct CGSize)sizeForOrientation:(int)fp8;
- (id)initWithFrame:(struct CGRect)fp8 text:(id)fp24 font:(id)fp28 replacingString:(id)fp32 withImage:(id)fp36;

@end

@interface EmptyCollectionExplanationView : _AITFireProbe
{
    UIImageView *_imageView;
    EmptyCollectionLabel *_explanationLabel;
    EmptyCollectionLabel *_instructionsLabel;
    int _interfaceOrientation;
}

- (void)setInterfaceOrientation:(int)fp8;
- (int)interfaceOrientation;
- (void)layoutSubviews;
- (float)_paddingBetweenImageAndText;
- (void)fadeOutAnimated:(BOOL)fp8 completion:(id)fp(null);
- (void)fadeInAnimated:(BOOL)fp8;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8 image:(id)fp24 explanationText:(id)fp28 instructionsText:(id)fp32 replacingString:(id)fp36 withImage:(id)fp40;

@end

@interface TouchEatingButton : _AITFireProbe
{
}

- (id)hitTest:(struct CGPoint)fp8 withEvent:(id)fp16;

@end

@interface AppBundleURLProtocol : _AITFireProbe
{
}

+ (BOOL)requestIsCacheEquivalent:(id)fp8 toRequest:(id)fp12;
+ (id)canonicalRequestForRequest:(id)fp8;
+ (BOOL)canInitWithRequest:(id)fp8;
+ (id)URLForResourceAtPath:(id)fp8;
+ (id)URLScheme;
+ (void)registerProtocol;
+ (void)initialize;
- (void)stopLoading;
- (void)startLoading;
- (void)_sendDataToClient:(id)fp8 forURL:(id)fp12;
- (void)_sendURLErrorToClient:(int)fp8 forURL:(id)fp12;
- (void)_sendURLErrorToClient:(int)fp8 withUserInfo:(id)fp12;

@end

@interface CaptiveLandingPageController : _AITFireProbe
{
    NSURL *_captiveLandingPageURL;
    unsigned long long _URLGeneration;
}

+ (id)sharedCaptiveLandingPageController;
- (id)captiveLandingPageURL;
- (void)clearCaptiveLandingPageURL;
- (id)popCaptiveLandingPageURL;
- (void)dealloc;
- (id)init;

@end

@interface ReadingListProgressView : _AITFireProbe
{
    double _progress;
    BOOL _usesSmallVersion;
    UIImageView *_glasses;
    UIImageView *_track;
    UIImageView *_fill;
}

- (double)progress;
- (BOOL)usesSmallVersion;
- (struct CGPoint)pressFeedbackPosition;
- (void)setProgress:(double)fp8;
- (void)setUsesSmallVersion:(BOOL)fp8;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)fp8;
- (void)dealloc;
- (void)setToolbarTintColor:(id)fp8;
- (id)initWithFrame:(struct CGRect)fp8 usesSmallVersion:(BOOL)fp24;

@end

@interface BrowserICSPreviewPanelNavController : _AITFireProbe
{
    UIBarButtonItem *_doneBarButtonItem;
    UIBarButtonItem *_activitiesBarButtonItem;
    BrowserICSPreviewPanel *_icsPanel;
    BOOL _closeBrowserPanelAlreadyCalled;
}

- (void)viewDidDisappear:(BOOL)fp8;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewDidAppear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;
- (id)popViewControllerAnimated:(BOOL)fp8;
- (void)_updateNavigationBarItems;
- (void)_ensureRightBarButtonItemsIncludesDoneItem:(id)fp8;
- (void)_ensureLeftBarButtonItemsIncludesDoneItem:(id)fp8;
- (void)_ensureLeftBarButtonItemsIncludesActivitiesItem:(id)fp8;
- (id)_doneBarButonItem;
- (id)_activtyBarButtonItem;
- (void)setCloseBrowserPanelAlreadyCalled:(BOOL)fp8;
- (void)setOwningPanel:(id)fp8;
- (void)dealloc;

@end

@interface BrowserICSPreviewPanel : _AITFireProbe <RotatablePopoverControllerDelegate, BrowserPanel>
{
    OpenInOtherAppActivityViewController *_activityViewController;
    BrowserICSPreviewPanelNavController *_wrappingNavController;
    RotatablePopoverController *_activityPopover;
    EKICSPreviewController *_icsController;
    NSString *_filePath;
}

- (void)popoverControllerDidDismissPopover:(id)fp8;
- (BOOL)shouldHideOnSuspend;
- (int)pausesPages;
- (int)panelState;
- (BOOL)ignoresPrivateBrowsingStyle;
- (int)panelType;
- (id)viewController;
- (void)_done:(id)fp8;
- (void)_openInOtherAppsButtonPressed:(id)fp8;
- (id)activityViewController;
- (void)dealloc;
- (id)initWithFilePath:(id)fp8;

@end

@interface OpenWithAppUIActivity : _AITFireProbe <LSOpenResourceOperationDelegate>
{
    LSApplicationProxy *_appProxy;
    NSString *_filePath;
}

- (void)openResourceOperation:(id)fp8 didFinishCopyingResource:(id)fp12;
- (void)performActivity;
- (BOOL)canPerformWithActivityItems:(id)fp8;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)fp8 andFilePath:(id)fp12;

@end

@interface OpenInOtherAppActivityItemsSource : _AITFireProbe <UIActivityItemsSource>
{
    NSURL *_fileURL;
}

- (id)activityViewController:(id)fp8 itemsForActivityType:(id)fp12;
- (id)activityViewControllerPlaceholderItems:(id)fp8;
- (void)dealloc;
- (id)initWithFilePath:(id)fp8;

@end

@interface OpenInOtherAppActivityViewController : _AITFireProbe
{
    NSString *_filePath;
}

+ (id)_activityItemsForFilePath:(id)fp8 andUTI:(id)fp12;
+ (id)_applicationsForDocumentProxy:(id)fp8;
- (void)setFilePath:(id)fp8;
- (id)filePath;
- (void)_prepareActivity:(id)fp8;
- (void)dealloc;
- (id)initWithFilePath:(id)fp8 andUTI:(id)fp12;

@end

@interface MSFlipAnimation : _AITFireProbe
{
    int _transitionSide;
    float _duration;
    UIView *_containerView;
    UIView *_parentView;
    UIView *_fromView;
    UIView *_toView;
    id _beginBlock;
    id _completion;
}

- (void)setCompletion:(id)fp(null);
- (id)completion;
- (void)setBeginBlock:(id)fp(null);
- (id)beginBlock;
- (void)setToView:(id)fp8;
- (id)toView;
- (void)setFromView:(id)fp8;
- (id)fromView;
- (void)setParentView:(id)fp8;
- (id)parentView;
- (void)setDuration:(float)fp8;
- (float)duration;
- (void)setTransitionSide:(int)fp8;
- (int)transitionSide;
- (void)animationDidStop:(id)fp8 finished:(BOOL)fp12;
- (void)_rotateLayer:(id)fp8 byAngle:(float)fp12 completion:(id)fp(null);
- (void)_cleanupTransition;
- (void)_performTransition;
- (void)_prepareTransition;
- (void)performAnimation;
- (void)dealloc;

@end

@interface BookmarksToolbarButton : _AITFireProbe
{
    ReadingListProgressView *_readingListProgressView;
    MSFlipAnimation *_currentFlipAnimation;
    UIBarButtonItem *_barButtonItem;
    UIView *_bookmarksIconView;
    NSMutableArray *_flipAnimations;
    BOOL _usesSmallVersion;
}

- (void)_flipToReadingListProgressView:(BOOL)fp8;
- (void)_flipToProgressViewDidFinish:(id)fp8;
- (void)_flipFromReadingListProgressView:(BOOL)fp8;
- (void)_flipFromProgressViewDidFinish:(id)fp8;
- (void)_startNextFlipAnimationWithDelay:(BOOL)fp8;
- (void)_stopTrackingAnimation:(id)fp8;
- (void)_beginTrackingAnimation:(id)fp8;
- (void)setUsesPrivateBrowsingStyle:(BOOL)fp8;
- (void)setProgressViewProgress:(double)fp8;
- (void)showProgressView:(BOOL)fp8 animated:(BOOL)fp12;
- (BOOL)isShowingProgressView;
- (void)setUsesSmallVersion:(BOOL)fp8;
- (BOOL)usesSmallVersion;
- (void)layoutSubviews;
- (void)_updateBookmarkIconView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)fp8;

@end

@interface _AITFireProbe (SafariExtrasForFindOnPage)
- (id)_selectedOrMainFrame;
@end

@interface _AITFireProbe (Extras)
- (void)deleteAllCookies;
- (void)deleteCookiesForDomain:(id)fp8;
- (id)newDomainDiskUsageDictionary;
- (unsigned long long)_diskUsageForCookie:(id)fp8;
@end

@interface _AITFireProbe (MobileSafariExtras)
- (id)stringByReplacingLastOccurrenceOfWhitespaceWithANonBreakingSpace;
- (id)stringByReplacingMarkupCharactersWithHTMLEntities;
- (id)stringWithoutURLScheme;
- (id)lastPathComponentWithoutZipExtension;
@end

@interface _AITFireProbe (NSURLExtrasPrivate)
- (BOOL)isWebSearchURL;
- (id)userVisibleHost;
@end

@interface _AITFireProbe (MobileSafariExtras)
- (id)stringForKey:(id)fp8 defaultValue:(id)fp12;
@end

@interface _AITFireProbe (ReaderInternal)
- (id)currentURL;
@end

@interface _AITFireProbe (DocumentView)
- (id)URL;
@end

@interface _AITFireProbe (TabDocumentExtras)
- (id)URLScheme;
@end

@interface _AITFireProbe (TabDocumentExtras)
- (id)failingURL;
@end

@interface _AITFireProbe (PrivateBrowsing)
+ (id)imageNamed:(id)fp8 usingPrivateBrowsingStyle:(BOOL)fp12;
@end

@interface _AITFireProbe (UITableViewCellExtras)
- (void)_setLinkedPageTitle:(id)fp8 URL:(id)fp12 removeAddressScheme:(BOOL)fp16;
@end

@interface _AITFireProbe (URLCompletion)
- (float)_weightForURLCompletion;
- (id)_possiblePrefixesForURLCompletion;
@end

@interface _AITFireProbe (SafariAdditions)
+ (void)setInitialReadingListIconFetchingEnabled:(BOOL)fp8;
+ (void)loadAccountBookmarkFromCarrierBundleDictionary:(id)fp8 ignoringDeletedBookmarks:(id)fp12 intoArray:(id)fp16;
+ (void)loadBookmarksFromCarrierBundleDictionary:(id)fp8 ignoringDeletedBookmarks:(id)fp12 intoArray:(id)fp16;
+ (id)staticCarrierBookmarksIgnoringDeletedBookmarks:(id)fp8;
+ (id)staticBookmarks;
+ (void)reloadStaticBookmarks;
+ (BOOL)deleteStaticBookmark:(id)fp8;
+ (id)mainBookmarkCollection;
- (void)migrateYouTubeBookmarks;
- (id)_uniqueYouTubeBookmarkFolderName;
- (void)_markDuplicateReadingListBookmarkUnread:(id)fp8 updatingController:(id)fp12;
- (void)fetchInitialMissingReadingListIconsForList:(id)fp8;
- (void)fetchInitialMissingReadingListIcons;
- (void)stopDownloadingReadingListIcons;
- (void)startDownloadingReadingListIcons;
- (int)populateIconForReadingListBookmark:(id)fp8 allowDownloads:(BOOL)fp12;
- (void)receivedBookmarksDidReloadNotification:(id)fp8;
- (BOOL)updateReadingListBookmarkWithID:(unsigned int)fp8 setTitle:(id)fp12 address:(id)fp16 previewText:(id)fp20;
- (BOOL)markReadingListBookmarkWithIDAsRead:(unsigned int)fp8;
- (BOOL)saveReadingListBookmarkWithTitle:(id)fp8 address:(id)fp12 previewText:(id)fp16 tabDocument:(id)fp20 didFetchPage:(BOOL)fp24 updateController:(id)fp28;
@end

@interface _AITFireProbe (MobileSafariExtras)
- (void)setWebHistoryItemReadingListBookmarkID:(unsigned int)fp8;
- (unsigned int)webHistoryItemReadingListBookmarkID;
- (void)setSecurityInfo:(id)fp8;
- (id)securityInfo;
@end

@interface _AITFireProbe (MobileSafariExtras)
- (void)setReadingListBookmarkID:(unsigned int)fp8;
- (unsigned int)readingListBookmarkID;
@end

@interface _AITFireProbe (UITableViewHeaderFooterViewExtras)
- (id)initStandardHeaderViewWithTableView:(id)fp8 reuseIdentifier:(id)fp12;
@end

